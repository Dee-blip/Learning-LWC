<!-- Author: Ruchika Sharma
    Version: 1.0
    Created date: 01/08/2016
   SFDC-2331: Project Agility- modify lead reassign to support lightening and list view.
-->
<apex:page standardController="Lead" recordSetVar="Leads"
           extensions="LeadReassignController" cache="false"  standardStylesheets="false" sidebar="false" applyBodyTag="false" docType="html-5.0">
        <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" lang="en">
        <head>
          <meta charset="utf-8" />
          <meta http-equiv="x-ua-compatible" content="ie=edge" />
          <title>Change Owner</title>
          <meta name="viewport" content="width=device-width, initial-scale=1" />
        
          
         
        </head>
        <body>
        
         <apex:includeLightning />
    
              
        <div id="theLead"/>
    
         <script>
            var __sfdcSessionId = '{!GETSESSIONID()}';
            console.log("leadId:: "+{!leadRecord});
            console.log("Leads:: "+"{!Leads}");
           
            $Lightning.use("c:gsm_lite_LeadReassign", function() {

                $Lightning.createComponent(

                    "c:gsm_lite_LeadReassign_Component",

                    {
                        recordId: (({!ISBLANK(leadRecord)}) ? null :{!leadRecord}),
                        fromVf: "true",
                        homeURL: "{!initialURL}",
                        errorSelection: "{!errorUnselected}"
                        
                    },

                    "theLead",

                 function(cmp) {
                        // var loadingDivElt = document.getElementById("auraLoadingBox");
                        // loadingDivElt.style.display = 'none';
                        console.log("Component is created!");
                        /*$A.eventService.addHandler({
                          event: 'force:navigateToURL',
                          handler: function(event) {
                            console.log('printing');
                            console.log(event);
                            console.log(sforce);
                            if (sforce && sforce.one) {
                                console.log(event.$params$);
                                // console.log(event.)
                              // VF page in S1 or Lightning Exp
                              sforce.one.navigateToURL(event.getParams().url);
                            } 
                            // else {
                            //   // VF page in Classic
                            //   // Ugg! We need an if branch for each possible object type.
                            //   // Is there a better way of doing this?
                            //   if (event.$params$.scope === 'Contact') {
                            //     window.location = '{!URLFOR($Action.Contact.Tab, $ObjectType.Contact)}';
                            //   }
                            // }
                          }
                        });*/
                        
                        console.log(cmp);

                    });

                });

        
          </script>

            </body>
    </html>
    

    <apex:pageMessages /><br/>
    

</apex:page>