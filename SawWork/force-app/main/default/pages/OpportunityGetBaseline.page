<apex:page standardController="Opportunity" extensions="OpportunityGetBaseline,OpportunityCreateNew" lightningStylesheets="true">
    <apex:includeScript value="{!URLFOR($Resource.Jquery_1_11,'js/jquery-1.11.3.min.js')}" />
    <apex:includeScript value="/lightning/lightning.out.js" />

    <style>
    .spinnerBackground {
        /* Background color */
        background-color:black;
        opacity: 0.20;
        filter: alpha(opacity = 20);

        /* Dimensions */
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        z-index: 998;
        position: absolute;

        /* Mouse */
        cursor:wait;
    }

    .PopupPanel {
        /* Background color */

        /* Dimensions */
        left: 50%;
        width: 200px;
        margin-left: -100px;
        top: 50%;
        height: 50px;
        margin-top: -25px;
        z-index: 999;
        position: fixed;

        /* Mouse */
        cursor:pointer;
    }

                  .custPopup{
            background-color: white;
            border-width: 2px;
            border-style: solid;
            z-index: 9999;
            left: 50%;
            padding:10px;
            position: absolute;
            /* These are the 3 css properties you will need to change so the popup
            displays in the center of the screen. First set the width. Then set
            margin-left to negative half of what the width is. You can add
            the height property for a fixed size pop up if you want.*/
            width: 1000px;
            margin-left: -400px;
            top:20%;
        }
        .popupBackground{
            background-color:black;
            opacity: 0.20;
            filter: alpha(opacity = 20);
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: 9998;
        }
  </style>
    <div id="lightning"/>
    <script>


    if ("{! JSENCODE($User.UIThemeDisplayed) }" == "Theme4t") { // SFDC-5897 modified to use JSENCODE
      $Lightning.use("c:SF1_App_OpportunityBaseLine", function () {
        $Lightning.createComponent("c:SF1_Component_OpportunityGetBaseline", {accId:"{!JSENCODE($CurrentPage.parameters.accId)}", oppId: "{!JSENCODE($CurrentPage.parameters.opportunityID)}", currencyCode: "{!JSENCODE($CurrentPage.parameters.currencyCode)}", closeDate: "{!JSENCODE($CurrentPage.parameters.closeDate)}"}, "lightning", function (cmp) {
          // do some stuff
        });
      });
    }


 //    // MOB-345 Load the App for Mobile else follow the regular flow
 //    if("{! $User.UIThemeDisplayed }" == "Theme4t")
 //    {
 //      window.stop();

 // var componentDef = '{"componentDef" : "c:SF1_Component_OpportunityGetBaseline","attributes" : {"accId":"{!$CurrentPage.parameters.accId}", "oppId" : "{!$CurrentPage.parameters.opportunityID}","currencyCode":"{!$CurrentPage.parameters.currencyCode}","closeDate":"{!$CurrentPage.parameters.closeDate}"}}';
 //   ase64 = window.btoa(componentDef);

 //       // window.parent.location = '/one/one.app#'+componentDefToBase64;
 //       sforce.one.navigateToURL('/one/one.app#'+componentDefToBase64);
 //    }

    // SFDC-1395
    function confirmAddProd() {
        if(confirm('Selected contract\'s currency is different from Opportunity\'s Currency. Click Ok to proceed.')) {
            getBaseline();
            showSpinner();
        }
        return false;
    }
</script>
    <script>
    $j = jQuery.noConflict();

    function checkboxChanged(checkbox,toggle) {
  console.log(toggle);
      if(!toggle){
             // Get the name of the checkbox which changed
        var changedCheckboxId = $j(checkbox).attr('name');

        // Get all checkboxes
        $j(":checkbox[data-cbType='mainContactCheckbox']").each(function(index) {

            // Set all checkboxes EXCEPT the recently changed one to be unchecked
            if (changedCheckboxId != $j(this).attr('name')) {
                    $j(this).attr('checked', false);
            }
        });

      }

    };
</script>
    <!-- <div id="opaque"/>
       <div id="spinner">
            <p align="center" style='{font-family:"Arial", Helvetica, sans-serif; font-size:20px;}'><apex:image value="/img/loading.gif"/>&nbsp;Please wait</p>
       </div> -->

    <script>
    function showSpinner()
    {
       document.getElementById('opaque').style.display='block';
       var popUp = document.getElementById('spinner');

       popUp.style.display = 'block';
    }

    function hideSpinner()
    {
        document.getElementById('opaque').style.display='none';
        var popUp = document.getElementById('spinner');

        popUp.style.display = 'none';
    }
   </script>
    <apex:form id="formId" rendered="{! $User.UIThemeDisplayed  != 'Theme4t' }">
        <apex:outputLink value="/{!oppId}" id="back"> Back to Opportunity </apex:outputLink>
        <apex:pageMessages id="msgs" escape="false"/>

        <apex:actionStatus id="showSpinner" stopText="">
            <apex:facet name="start">
                <div>
                    <div class="spinnerBackground" />
                    <div class="PopupPanel">
                        <table border="0" width="100%" height="100%">
                            <tr>
                                <td align="center"><img src="/img/loading32.gif"/></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </apex:facet>
        </apex:actionStatus>

        <apex:outputPanel id="contractsectionid">

            <apex:pageBlock id="Section1" title="Select Contracts" rendered="{!!showError && ContractWrapper.size>0}" >
                <apex:outputPanel style="padding-bottom:10px;padding-top:2px;font-style:italic;" layout="block" >
                    <!--apex:outputText >Please select contract(s) of the <b>same currency</b>.</apex:outputText-->
                </apex:outputPanel>
                <apex:pageblockTable value="{!ContractWrapper}"  var="contractRecord" >
                    <apex:column headerValue="Select">
                        <apex:inputCheckbox value="{!contractRecord.Checkbox}" id="inputId" html-data-cbType="mainContactCheckbox">
                            <apex:actionSupport event="onclick" reRender="block,msgs" action="{!inputCheckForGetBaseline}" onSubmit="checkboxChanged(this,{!IF(EMRIMultipleContractsToggle,'true','false')})" status="showSpinner"/> <!-- SFDC-5897 modified code  to have IF condition -->
                        </apex:inputCheckbox>
                    </apex:column>
                    <apex:column value="{!contractRecord.mch.Original_Contract_Id__c}"/>
                    <apex:column value="{!contractRecord.mch.Parent_Contract__c}"/>
                    <apex:column value="{!contractRecord.mch.Order_Id__c}"/>
                    <apex:column value="{!contractRecord.mch.Currency__c}"/>
                    <apex:column value="{!contractRecord.mch.Contract_Type__c}"/>
                    <apex:column value="{!contractRecord.mch.Parent_Account_Name__c }"/>
                    <apex:column value="{!contractRecord.mch.Solution_Set__c}"/>
                    <apex:column value="{!contractRecord.mch.Effective_End_Date__c}"/>
                    <apex:column value="{!contractRecord.mch.Effective_Start_Date__c}"/>
                    <apex:column headerValue="Contract Products">
                        <apex:commandButton action="{!showContractProducts}" reRender="contractproductpopup"  value="View ({!FLOOR(contractRecord.mch.Contract_Product_Count__c)})" status="showSpinner">
                            <apex:param id="param2" name="tempLineId2" value="{!contractRecord.mch.Original_Contract_Id__c}" assignTo="{!contractIdForProduct}" />
                        </apex:commandButton>
                    </apex:column>
                </apex:pageblockTable>
            </apex:pageBlock>
        </apex:outputPanel>

        <apex:outputPanel id="block">

            <apex:commandButton rendered="{!!showError && ContractWrapper.size>0}" disabled="{!hideGetBaselineButton}" value="Get Contract Baseline"  style="float:left;width:200px;height:30px;font-weight:bold;" action="{!getBaseline}" reRender="formId" status="showSpinner"/>
            <!-- SFDC-1395 -->
            <!--apex:commandButton rendered="{!showError}" disabled="{!hideGetBaselineButton}" value="Get Contract Baseline" style="float:left;width:122px;height:25px;font-weight:bold;" onclick="return confirmAddProd();" rerender="formId" /-->
            <!--apex:commandButton rendered="{!currencyMismatch && !showError}" disabled="{!hideGetBaselineButton}" value="Get Contract Baseline" style="float:left;width:122px;height:25px;font-weight:bold;" onclick="return confirmAddProd();" rerender="formId" /-->
            <apex:actionFunction action="{!getBaseline}" name="getBaseline"  status="showSpinner"/>
        </apex:outputPanel>
        <apex:outputPanel id="contractproductpopup">
            <apex:outputPanel styleClass="popupBackground" layout="block" rendered="{!showContractProductPop}"/>
            <apex:outputPanel styleClass="custPopup" layout="block" rendered="{!showContractProductPop}">
                <apex:pageBlock id="contractProductSection" title="Contract Products of {!contractIdForProduct}">
                    <apex:pageblockTable value="{!ContractProductWrapper}"  var="contractProductRecord" >
                        <apex:column value="{!contractProductRecord.forecastProductName}" headerValue="Forecast Product Name"/>
                        <apex:column value="{!contractProductRecord.currencyCode}" headerValue="Currency Code"/>
                        <apex:column value="{!contractProductRecord.averageRenewalCommit}" headerValue="Baseline Monthly Commit"/>
                        <apex:column value="{!contractProductRecord.averageRenewalUsage}" headerValue="Baseline Monthly Usage"/>
                    </apex:pageblockTable>
                </apex:pageBlock>
                <apex:commandButton value="Close" action="{!closePopup}" rerender="contractproductpopup" status="showSpinner"/>
            </apex:outputPanel>
        </apex:outputPanel>

        <!--         </apex:outputPanel>
         -->        </apex:form>
</apex:page>