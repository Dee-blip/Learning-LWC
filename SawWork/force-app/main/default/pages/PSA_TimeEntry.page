<apex:page sidebar="false" showHeader="false" doctype="HTML-5.0" standardStylesheets="false"  cache="true" controller="PSA_TimeEntryController" docType="html-5.0">
 
  <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" lang="en">
      <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <apex:includeScript value="{!URLFOR($Resource.JQuery191, 'jquery-1.9.1.min.js')}"/>
  <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
  <apex:includeScript value="{!URLFOR($Resource.TooltipJS) }"/>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/7.3/highlight.min.js"></script>
  <script src="https://selectize.github.io/selectize.js/js/selectize.js"></script>
  <script src="https://selectize.github.io/selectize.js/js/main.js"></script>
 
  <link rel="stylesheet" href="https://selectize.github.io/selectize.js/css/selectize.bootstrap2.css"></link>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"></link>
 
    <apex:slds />
 
    <style>
        .slds-scope .slds-select{
          height:auto !important;
         
        }
        .selectize-control.single .selectize-input{
          background-image: none !important ;
          background-color: #ffffff !important ;
          border-width: 0px 0px 0 0px;
        }
       
        .selectize-control.single .selectize-input:after{
          border-width: 0px 0px 0 0px !important;
          border-style: none !important;
        }
        .selectize-input {
          overflow: visible  !important;
        
        }
        .selectize-control.single .selectize-input.dropdown-active:after{
          border-width: 0 0px 0px 0px; */
        }
        .selectize-input {
            padding: 0px 1px !important;
        }   
      
    .navbar-fixed-top  {padding-top:5px !important; padding-bottom:5px !important; min-height:32px !important;background-color:#2a516f !important } 
     
      .navbar-fixed-bottom {min-height:57px !important}
 
      .glyphicon {
          font-size: 1.2em; !important;
      }
      .nonScroll{
          position: fixed;
          overflow: hidden;
      }
 
 
 
      .placeholder{
          color: #00496B;
          border-left: 1px solid #E1EEF4;
          font-size: 12px;
          font-style: italic;
          font-weight: 10;   
          opacity: 0.2     
      }
        .float_left{
              position: absolute;
              left: 0% !important;
              top: 2% !important;
              width: 35% !important;
              display: inline;  
              height: 100% !important;      
        }
          .float_center{             
              position: absolute;
              left: 40% !important;
              top: 2% !important;
              display: inline;
          }
          .float_right{
          position: relative;          
          left: 92% !important;
          cursor: pointer;
          display: inline;
          top: 2% !important;
          height: 100% !important;
          width: 25%!important;
          }
 
      @media screen and (max-width: 320px) {
        /* comes into effect for screens less than or equal to 320 pixels */
          .footer button{
              width: 5em;  height: 5em;
          }
          div.footer {
            position: fixed; 
            bottom: 2.2%;
            margin: auto;
            width: 50%; 
            right: 25%;
            left: 25%; 
            
          }
          .float_center{             
              position: absolute;
              left: 13% !important;
              top: 2% !important;
              display: inline;
          }
          .float_right{
          position: relative;          
          left: 88% !important;
          cursor: pointer;
          display: inline;
          top: 2% !important;
          height: 100% !important;
          width: 25%!important;
          }
 
      .dateStyle{
          position: absolute;
          left: 100%;
          display: inline;
          width: 120%;
          height: 30px;
          padding-top: 5px;
      }
      .leftStyle{
          position: absolute;
          left: 0%;
          top: 3%;
          display: inline;
          width: 14%;
          height: 100%;
          cursor:pointer;
      }
      .rightStyle{
          position: absolute;
          top: 3%;
          left: 256%;
          display: inline;
          width: 15%;
          cursor:pointer;
          height: 100%;
      }
 
      }
      @media screen and (min-width: 321px) and (max-width: 480px) {
        /* comes into effect for screens between 321 and 480 pixels (inclusive) */
          .footer button{
              width: 10em;  height: 7em;
          }
          div.footer {
            position: fixed; 
            bottom: 2.2%;
            margin: auto;
            width: 100%; 
            right: 25%;
            left: 25%; 
            
          }
          .float_center{             
              position: absolute;
              left: 14.5% !important;
              top: 2% !important;
              display: inline;
          }
          .float_right{
          position: relative;          
          left: 90% !important;
          cursor: pointer;
          display: inline;
          top: 2% !important;
          height: 100% !important;
          width: 25%!important;
          }
 
      .dateStyle{
            position: absolute;
            left: 95%;
            display: inline;
            width: 130%;
            height: 30px;
            padding-top: 5px;
        }
        .leftStyle{
            position: absolute;
            left: 0%;
            top: 3%;
            display: inline;
            width: 14%;
            height: 100%;
            cursor:pointer;
        }
        .rightStyle{
            position: absolute;
            top: 3%;
            left: 260%!important;
            display: inline;
            width: 15%;
            cursor:pointer;
            height: 100%;
        }
 
      }
      @media screen and (min-width: 481px) {
        /* comes into effect for screens larger than or equal to 481 pixels */
          .footer button{
             width: 9em;  height: 7em;
          }
          div.footer {
            position: fixed; 
            bottom: 5%;
            margin: auto;
            width: 50%; 
            right: 25%;
            left: 50%; 
            
          }
          .float_center{             
              position: absolute;
              left: 34.5% !important;
              top: 2% !important;
              display: inline;
          }
          .float_right{
          position: relative;          
          left: 95% !important;
          cursor: pointer;
          display: inline;
          top: 2% !important;
          height: 100% !important;
          width: 25%!important;
          }
    .dateStyle{
            position: absolute;
            left: 125%;
            display: inline;
            width: 65%;
            height: 30px;
          padding-top: 5px;
        }
        .leftStyle{
            position: absolute;
            left: 2%;
            top: 3%;
            display: inline;
            width: 14%;
            height: 100%;
            cursor:pointer;
        }
        .rightStyle{
            position: absolute;
            top: 3%;
            left: 273%!important;
            display: inline;
            width: 15%;
            cursor:pointer;
            height: 100%;
        }
 
      }
 
      .translucent{
        opacity: 0.6;
        float: right;
        cursor: pointer;
      }
 
      .noshow{
        display: none;
      }
 
      .billable{
        color: green;
      }
 
      .non-billable{
        color: red;
      }
 
      .footerText{
        position: absolute;
        top: 75%;
        color:black;
        font-size: 1.5em !important
      }
 
      .normal{
        color: blue;
        font-size: 14px;
          font-weight: normal;
      }
 
 
    .hours{
      position: relative;
      font-size: 1.5em!important;
      width: 20% !important;
    }
    .notes{
      position: relative;
      left: 8%;
      font-size: 1.5em !important;
      width: 60% !important; 
    }
    .labelhours{
      position: relative;
      font-size: 1.5em !important;;
    }
    .labelnotes{
      position: absolute;
      left: 40%;
      font-size: 1.5em !important;;
    }
    .wnotes{
      font-size: 1.5em !important;
      width: 90% !important; 
    }
    .fonttt{
      font-size: 1.5em !important;
    }
    .selectBox{
        width: 80px;
        height: 80px;
        cursor: pointer;
        -webkit-appearance: none;
        appearance: none;
    }
 
    .iconColor{
      fill: black !important;
    }
    .iconColor2{
      fill: white !important;
    }
    .iconColorBag{
      fill: gold !important;
    }
 
    .iconColor3{
      fill: LightSkyBlue !important;
    }
    .icon-color4{
      fill: Blue !important;
    }
    .disabled {
         pointer-events: none;
          cursor: not-allowed;
    }
 
    .fontSize2{       
        width: 20px;
        height: 20px;
    }
 
      #tt {
        position:absolute;
        display:block;
        font-size: 10px;
        background:url(images/tt_left.gif) top left no-repeat;
       }
 
      #tttop {
        display:block;
        position:absolute;
        height:30px;
        margin-top: 30px;
        margin-left:5px;
        font-size: 10px;
        background:url(images/tt_top.gif) top right no-repeat;
        overflow:hidden;
       }
     
       #ttcont {
        display:block;
        position:absolute;
        padding:2px 12px 3px 7px;
        margin-left:5px;
        font-size: 10px;
        background:#666;
        color:#fff;
       }
     
      #tbot {
        display:block;
        position:absolute;
        height:5px;
        margin-left:5px; 
        font-size: 10px;
        background:url(images/tt_bottom.gif) top right no-repeat;
        overflow:hidden;
      }
 
    </style> 
    
    <script>
 
      var $ = jQuery.noConflict();
 
      Visualforce.remoting.timeout = 720000;
      var records;
      var milestones;
      var products;
      var assignmentIdToRecord = {};
      var timecardIdToRecord = {};
      var searchBox;
      var hoursBox;
      var currentRowNum = 0;
      var olderTimecards = [];
      var global;
      var contact;
      var currentScrollPos;
      var assignmentOptions = [];
      var weekStartDate;
     
      var limits;
      var tooltipTimeout;
      var messageTimeout;
 
      var mondayView = {};
      var tuesdayView = {};
      var wednesdayView = {};
      var thursdayView = {};
      var fridayView = {};
      var saturdayView = {};
      var sundayView = {};
      var totalView = {};
 
       mondayView['B'] = 0;
       mondayView['NB'] = 0;
 
       tuesdayView['B'] = 0;
       tuesdayView['NB'] = 0;
 
       wednesdayView['B'] = 0;
       wednesdayView['NB'] = 0;
 
       thursdayView['B'] = 0;
       thursdayView['NB'] = 0;
 
       fridayView['B'] = 0;
       fridayView['NB'] = 0;
 
       saturdayView['B'] = 0;
       saturdayView['NB'] = 0;
 
       sundayView['B'] = 0;
       sundayView['NB'] = 0;
   
       totalView['B'] = 0;
       totalView['NB'] = 0;
 
    function customRound(toRound)
    {
      if(toRound === undefined || isNaN(toRound))
      {
          toRound = 0;
      }
      var toR  = Number(toRound);
      var rounded = parseInt(toR);
      if(rounded < 10)
      {
        rounded = '0' + rounded;
      }
 
      var sixty60 = Math.round((toR - rounded) * 60.0);
      if(sixty60 < 10)
      {
        sixty60 = '0'+ sixty60;
      }
 
 
      return rounded + ' ' + sixty60;
    }
     
    function copyFive(refId)
    {
      var id = $(refId).attr("id");
      id = id.substring(5, id.length);
           
    var mondayNotes = $('#MondayNotes' + id).val();
    var mondayHours = $('#MondayHours' + id).val();
   
    $('#WeeklyNotes' + id).val(mondayNotes);
    $('#TuesdayHours' + id).val(mondayHours);
    $('#TuesdayNotes' + id).val(mondayNotes);
    $('#WednesdayHours' + id).val(mondayHours);
    $('#WednesdayNotes' + id).val(mondayNotes);
    $('#ThursdayHours' + id).val(mondayHours);
    $('#ThursdayNotes' + id).val(mondayNotes);
    $('#FridayHours' + id).val(mondayHours);
    $('#FridayNotes' + id).val(mondayNotes);
 
    }
     
    function copySeven(refId)
    {
      var id = $(refId).attr("id");
      id = id.substring(5, id.length);
           
    var mondayNotes = $('#MondayNotes' + id).val();
    var mondayHours = $('#MondayHours' + id).val();
   
    $('#WeeklyNotes' + id).val(mondayNotes);
    $('#TuesdayHours' + id).val(mondayHours);
    $('#TuesdayNotes' + id).val(mondayNotes);
    $('#WednesdayHours' + id).val(mondayHours);
    $('#WednesdayNotes' + id).val(mondayNotes);
    $('#ThursdayHours' + id).val(mondayHours);
    $('#ThursdayNotes' + id).val(mondayNotes);
    $('#FridayHours' + id).val(mondayHours);
    $('#FridayNotes' + id).val(mondayNotes);
    $('#SaturdayHours' + id).val(mondayHours);
    $('#SaturdayNotes' + id).val(mondayNotes);
    $('#SundayHours' + id).val(mondayHours);
    $('#SundayNotes' + id).val(mondayNotes);
 
    }
     
    function createCard(readonly,timecard,Names)
    {
     
      var currentAssignment;
      var timecardName = 'Timecard' + (currentRowNum + 1);
      var timecardRecord = timecard;
      var weekNotes = '';
      var mHours = 0;
      var mNotes = '';
      var tHours = 0;
      var tNotes = '';
      var wHours = 0;
      var wNotes = '';
      var thHours = 0;
      var thNotes = '';
      var fHours = 0;
      var fNotes = '';
      var saHours = 0;
      var saNotes = '';
      var suHours = 0;
      var suNotes = '';
 
      var mHours2 = 0;
      var tHours2 = 0;
      var wHours2 = 0;
      var thHours2 = 0;
      var fHours2 = 0;
      var saHours2 = 0;
      var suHours2 = 0;
 
      var stringHour;
      var status = 'Unsaved';
      var totalhours = 0;
      var inputNeeded = true;
      var milestoneName = '';
      var productName = '';
      if(timecard != undefined)
      {
 
 
        currentAssignment = assignmentIdToRecord[timecardRecord.pse__Assignment__c] === undefined ? assignmentIdToRecord[timecardRecord.pse__Project__c] : assignmentIdToRecord[timecardRecord.pse__Assignment__c];
        //currentAssignment = timecardRecord.pse__Assignment__r.Name;
        if(currentAssignment != undefined)
        {
           //timecardName = Names['Assignment'];   
           timecardName = currentAssignment.Name;
        }
        if(timecard.pse__Status__c != '' && timecard.pse__Status__c != undefined)
        {
            status = timecard.pse__Status__c;
            if(timecard.pse__Status__c === 'Approved')
            {
                inputNeeded = false;
            }
        }
 
        if(milestones[timecardRecord.pse__Milestone__c] != undefined)
        {
         
          milestoneName = milestones[timecardRecord.pse__Milestone__c].Name; 
        }
       
        //milestoneName = Names['Milestone'];
        if(products[timecardRecord.pse__Project_Methodology_Object__c] != undefined)
        {
         
          productName = products[timecardRecord.pse__Project_Methodology_Object__c].Name;
        }
       
        //productName = Names['Product'];
       
        totalhours = timecard.pse__Total_Hours__c === undefined ? (timecard.pse__Monday_Hours__c + timecard.pse__Tuesday_Hours__c + timecard.pse__Wednesday_Hours__c+ timecard.pse__Thursday_Hours__c + timecard.pse__Friday_Hours__c + timecard.pse__Saturday_Hours__c + timecard.pse__Sunday_Hours__c).toFixed(2):timecard.pse__Total_Hours__c;
 
        if(timecardRecord.pse__Timecard_Notes__c != undefined)
        {
          weekNotes = timecardRecord.pse__Timecard_Notes__c; 
        }
       
        // mHours = String(customRound((timecardRecord.pse__Monday_Hours__c))); 
        mHours2 = timecardRecord.pse__Monday_Hours__c.toFixed(2);
        mHours = mHours2;
        if(timecardRecord.pse__Monday_Notes__c != undefined)
        {
          mNotes = timecardRecord.pse__Monday_Notes__c;
        }
 
 
        // tHours = String(customRound((timecardRecord.pse__Tuesday_Hours__c)));
        tHours2 = timecardRecord.pse__Tuesday_Hours__c.toFixed(2);
        tHours = tHours2;
        if(timecardRecord.pse__Tuesday_Notes__c != undefined)
        {
          tNotes = timecardRecord.pse__Tuesday_Notes__c;
        }
 
        // wHours = String(customRound((timecardRecord.pse__Wednesday_Hours__c)));
        wHours2 = timecardRecord.pse__Wednesday_Hours__c.toFixed(2);
        wHours = wHours2;
        if(timecardRecord.pse__Wednesday_Notes__c != undefined)
        {
          wNotes = timecardRecord.pse__Wednesday_Notes__c;
        }
       
 
        // thHours = String(customRound((timecardRecord.pse__Thursday_Hours__c)));
        thHours2 = timecardRecord.pse__Thursday_Hours__c.toFixed(2);
        thHours = thHours2;
        if(timecardRecord.pse__Thursday_Notes__c != undefined)
        {
          thNotes = timecardRecord.pse__Thursday_Notes__c;
        }
       
        // fHours = String(customRound((timecardRecord.pse__Friday_Hours__c))); 
        fHours2 = timecardRecord.pse__Friday_Hours__c.toFixed(2); 
        fHours = fHours2;
        if(timecardRecord.pse__Friday_Notes__c != undefined)
        {
          fNotes = timecardRecord.pse__Friday_Notes__c;
        }
       
 
        // saHours = String(customRound((timecardRecord.pse__Saturday_Hours__c)));
        saHours2 = timecardRecord.pse__Saturday_Hours__c.toFixed(2);
        saHours = saHours2;
        if(timecardRecord.pse__Saturday_Notes__c != undefined)
        {
          saNotes = timecardRecord.pse__Saturday_Notes__c;
        }
       
 
 
        // suHours = String(customRound((timecardRecord.pse__Sunday_Hours__c)));
        suHours2 = timecardRecord.pse__Sunday_Hours__c.toFixed(2);
        suHours = suHours2;
        if(timecardRecord.pse__Sunday_Notes__c != undefined)
        {
          suNotes = timecardRecord.pse__Sunday_Notes__c;
        }
       
        $('.summarymHours').html((parseFloat($('.summarymHours').html()) + parseFloat(mHours2)).toFixed(2));
        $('.summarytHours').html((parseFloat($('.summarytHours').html()) + parseFloat(tHours2)).toFixed(2));
        $('.summarywHours').html((parseFloat($('.summarywHours').html()) + parseFloat(wHours2)).toFixed(2));
        $('.summarythHours').html((parseFloat($('.summarythHours').html()) + parseFloat(thHours2)).toFixed(2));
        $('.summaryfHours').html((parseFloat($('.summaryfHours').html()) + parseFloat(fHours2)).toFixed(2));
        $('.summarysaHours').html((parseFloat($('.summarysaHours').html()) + parseFloat(saHours2)).toFixed(2));
        $('.summarysuHours').html((parseFloat($('.summarysuHours').html()) + parseFloat(suHours2)).toFixed(2));
        $('.summarysumHours').html((parseFloat($('.summarysumHours').html()) + parseFloat(suHours2) + parseFloat(mHours2) + parseFloat(tHours2)+ parseFloat(wHours2)+ parseFloat(thHours2)+ parseFloat(fHours2)+ parseFloat(saHours2)).toFixed(2) );
       
      }
      var hoursInput;
      var listString;
 
      var selectString;
 
       
      var cardString =
      "<article class=\"slds-card slds-card--narrow\" id=\"article" + currentRowNum +"\">" +
          "<div class=\"slds-card__body slds-card__body_inner\" >"+     
            "<div class=\"slds-card__body--inner slds-grid slds-wrap \">"+     
              "<div class=\"slds-p-horizontal_small slds-size_1-of-1  slds-hint-parent\" >"+      
 
                "<div class=\"slds-grid slds-wrap slds-grid_pull-padded\">"+
                     "<div class=\"slds-col--padded slds-size--6-of-12 slds-truncate\"> "+
                          "<div class=\"slds-grid slds-wrap \">"+
                              "<div class=\" slds-size--1-of-6\">"+
                                  "<span id=\"bill"+currentRowNum+"\" class=\"slds-icon_container slds-icon-utility-moneybag\" style=\"display: none;\" >"+
                                    "<svg class=\"slds-icon slds-icon--small iconColorBag\" aria-hidden=\"true\">"+
                                      "<use xlink:href=\"{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#moneybag')}\">"+                                   
                                      "</use>"+
                                    "</svg>"+
                                  "</span>"+
                                  "<span id=\"icon"+currentRowNum+"\" class=\"slds-icon_container slds-icon-custom-custom9\">"+
                                    "<svg class=\"slds-icon slds-icon--small\" aria-hidden=\"true\">"+
                                      "<use xlink:href=\"{!URLFOR($Asset.SLDS, 'assets/icons/custom-sprite/svg/symbols.svg#custom9')}\">"+                                   
                                      "</use>"+
                                    "</svg>"+
                                  "</span>"+
 
                              "</div>"+
                         
                              "<div class=\"slds-size--5-of-6 slds-truncate\">"+
                                  "<label id=\"assignmentName" + currentRowNum + "\" style=\"font-size: 1.5em !important\" class=\"slds-truncate slds-wrap\" onclick=\"hideShowToolBar('" + timecardName + " ')\">" + timecardName +
                                  "</label>"+
                              "</div>"+
                           "</div>   "+
                     "</div>"+
                   
                    
                     "<div class=\"slds-col--padded slds-size--3-of-12 slds-truncate\">"+
                        "<label id=\"status" + currentRowNum +"\" style=\"font-size: 1.5em !important\">" + status+
                        "</label>"+
                     "</div> "+
 
                     "<div class=\"slds-col--padded slds-size--1-of-12\">"+
                        "<label id=\"totalHours" + currentRowNum +"\" style=\"font-size: 1.5em !important\">" +totalhours+
                        "</label>"+
                     "</div> "+
                
                    "<div class=\"slds-col--padded slds-size--1-of-12\">"+
 
                            "<input type=\"checkbox\" name=\"checkbox\"  id=\"timecard" + currentRowNum + "\" class=\"slds-pull_right\" />"+ 
                    "</div>"+
                                                
                 "</div>" +
                 "<div class=\"slds-grid slds-wrap slds-grid_pull-padded\" >"+
                    "<div class=\"slds-col--padded slds-size--1-of-1 \">"+
                          "<label id=\"hourError" + currentRowNum +"\"  style=\"display: none;\">"+
                          "</label>  "+
                        "</div>"+
                 "</div>";
 
 
      //if(inputNeeded)
      {
 
 
          selectString =
                      "<div id=\"inputCard" + currentRowNum + "\" >"+
                      "<div class=\"slds-p-horizontal_small slds-size_1-of-1  slds-hint-parent\">"+                    
                        "<div class=\"slds-form-element\" id=\"AssignmentDiv" + currentRowNum +"\">"+
                          "<label class=\"slds-form-element__label\" for=\"AssignmentList" + currentRowNum + "\" style=\"font-size: 1.5em\">Assignment</label>"+
                          "<div class=\"slds-form-element__control\">"+
                            "<div class=\"slds-select_container\" style=\"font-size: 1.5em\">"+
                              "<select id=\"AssignmentList" + currentRowNum + "\" class=\"slds-select\" onchange=\"createProjectFilter('onchangeEvent',this); \" >"+
                              "</select>"+
                            "</div>"+
                          "</div>"+
                        "</div>        "+
                        "<div class=\"slds-form-element \" id=\"ProjectDiv" + currentRowNum +"\">"+
                          "<label class=\"slds-form-element__label\" for=\"ProjectList" + currentRowNum + "\" style=\"font-size: 1.5em\">Project</label>"+
                          "<div class=\"slds-form-element__control\">"+
                            "<div class=\"slds-select_container \" style=\"font-size: 1.5em\">                      "+
                              "<select id=\"ProjectList" + currentRowNum + "\" class=\"slds-select\"   >"+
                              "</select>"+
                            "</div>"+
                          "</div>"+
                        "</div>        "+
                        "<div class=\"slds-form-element \">"+
                          "<label class=\"slds-form-element__label\" for=\"MilestoneList" + currentRowNum + "\" style=\"font-size: 1.5em\">Milestone</label>"+
                          "<div class=\"slds-form-element__control\">"+
                            "<div class=\"slds-select_container\" style=\"font-size: 1.5em\">                     "+
                              "<select id=\"MilestoneList" + currentRowNum + "\" class=\"slds-select\"   >"+
                              "</select>"+
                            "</div>"+
                          "</div>"+
                        "</div>        "+
                        "<div class=\"slds-form-element \">"+
                          "<label class=\"slds-form-element__label\" for=\"ProductList" + currentRowNum + "\" style=\"font-size: 1.5em\">Project Product</label>"+
                          "<div class=\"slds-form-element__control\">"+
                            "<div class=\"slds-select_container \" style=\"font-size: 1.5em\">                      "+
                              "<select id=\"ProductList" + currentRowNum + "\" class=\"slds-select\" onchange=\"autoFocus(this);\">"+
                              "</select>"+
                            "</div>"+
                          "</div>"+
                        "</div>" +
                      "</div>"+
                                         
                     "<span id= \"right" + currentRowNum +"\" class=\"slds-icon-utility-chevronright fonttt\" style=\"display: none;cursor:pointer\" onclick=\"hideHours2(this);\">"+
                      "<svg aria-hidden=\"true\" class=\"slds-icon iconColor\">"+
                        "<use xlink:href=\"{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#chevronright')}\"></use>"+
                      "</svg>"+
                    "Hours"+
                    "</span>"+
                    "<span id=\"down"+ currentRowNum +"\" class=\"slds-icon-utility-switch fonttt\" style=\"cursor:pointer\" onclick=\"showHours2(this);\">"+
                      "<svg aria-hidden=\"true\" class=\"slds-icon iconColor\">"+
                        "<use xlink:href=\"{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#switch')}\"></use>"+
                      "</svg>"+
                    "Hours"+
                    "</span>"+                   
                    "<div id=\"collapse"+ currentRowNum +"\" class=\"slds-p-horizontal_small slds-size_1-of-1  slds-hint-parent\" style=\"display: none\">"+
                    
                        "<div style=\"position:relative;left:30%\">"+
                                    "<button style=\"background-color: DodgerBlue;\" id=\"copy5" + currentRowNum + "\" onclick=\"copyFive(this);\"> " +
                                      "<svg class=\"slds-icon slds-icon--small icon-color4\" aria-hidden=\"true\">"+
                                        "<use xlink:href=\"{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#package')}\"></use>" +
                                      "</svg>" +
                                      "</button>"+
                                    "<button style=\"background-color: DodgerBlue ;\" id=\"copy7" + currentRowNum + "\" onclick=\"copySeven(this);\"> " +
                                      "<svg class=\"slds-icon slds-icon--small icon-color4\" aria-hidden=\"true\">"+
                                        "<use xlink:href=\"{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#weeklyview')}\"></use>" +
                                      "</svg>" +
                                      "</button>"+
                                "</div>"+
                                "<div class=\"slds-tile__detail slds-text-body--small\" >"+
                                    "<div class=\"slds-wrap\">"+
                                      "<label class=\"labelhours\" for=\"MondayHours" + currentRowNum + "\" >Monday Hours</label>"+
                                      "<label class=\"labelnotes\" for=\"MondayNotes" + currentRowNum + "\" >Monday Notes</label>"+
                                    "</div>"+
                                "<div >"+
                                    "<input type=\"text\" class=\"slds-input hours\" id=\"MondayHours" + currentRowNum + "\"    value=\"" +mHours +  "\"/>                            "+
                                    "<input type=\"text\" class=\"slds-input notes\" id=\"MondayNotes" + currentRowNum + "\"  value=\"" +mNotes +  "\"/>"+
                                  "</div>"+
                                "<div class=\"slds-wrap\">"+
                                    "<label class=\"labelhours\" for=\"TuesdayHours" + currentRowNum + "\" >Tuesday Hours</label>"+
                                    "<label class=\"labelnotes\" for=\"TuesdayNotes" + currentRowNum + "\" >Tuesday Notes</label>"+
                                  "</div>"+
                                  "<div >"+
                                    "<input type=\"text\" class=\"slds-input hours\" id=\"TuesdayHours" + currentRowNum + "\"   value=\"" +tHours +  "\"/>"+
                                    "<input type=\"text\" class=\"slds-input notes\" id=\"TuesdayNotes" + currentRowNum + "\" value=\"" +tNotes +  "\" />"+
                                  "</div>"+
                                "<div class=\"slds-wrap\">"+
                                    "<label class=\"labelhours\" for=\"WednesdayHours" + currentRowNum + "\" >Wednesday Hours</label>"+
                                    "<label class=\"labelnotes\" for=\"WednesdayNotes" + currentRowNum + "\" >Wednesday Notes</label>"+
                                  "</div>"+
                                  "<div >"+
                                    "<input type=\"text\" class=\"slds-input hours\" id=\"WednesdayHours" + currentRowNum + "\"  value=\"" +wHours +  "\" />"+
                                    "<input type=\"text\" class=\"slds-input notes\" id=\"WednesdayNotes" + currentRowNum + "\"  value=\"" +wNotes +  "\"/>"+
                                  "</div>"+
                                "<div class=\"slds-wrap\">"+
                                    "<label class=\"labelhours\" for=\"ThursdayHours" + currentRowNum + "\" >Thursday Hours</label>"+
                                    "<label class=\"labelnotes\" for=\"ThursdayNotes" + currentRowNum + "\" >Thursday Notes</label>"+
                                  "</div>"+
                                  "<div >"+
                                    "<input type=\"text\" class=\"slds-input hours\" id=\"ThursdayHours" + currentRowNum + "\"  value=\"" +thHours +  "\" />"+
                                    "<input type=\"text\" class=\"slds-input notes\" id=\"ThursdayNotes" + currentRowNum + "\"  value=\"" +thNotes +  "\"/>"+
                                  "</div>"+
                                "<div class=\"slds-wrap\">"+
                                    "<label class=\"labelhours\" for=\"FridayHours" + currentRowNum + "\" >Friday Hours</label>"+
                                    "<label class=\"labelnotes\" for=\"FridayNotes" + currentRowNum + "\" >Friday Notes</label>"+
                                  "</div>"+
                                  "<div >"+
                                    "<input type=\"text\" class=\"slds-input hours\" id=\"FridayHours" + currentRowNum + "\"   value=\"" +fHours +  "\"/>"+
                                    "<input type=\"text\" class=\"slds-input notes\" id=\"FridayNotes" + currentRowNum + "\"  value=\"" +fNotes +  "\"/>"+
                                  "</div>"+
                                "<div class=\"slds-wrap\">"+
                                    "<label class=\"labelhours\" for=\"SaturdayHours" + currentRowNum + "\" >Saturday Hours</label>"+
                                    "<label class=\"labelnotes\" for=\"SaturdayNotes" + currentRowNum + "\" >Saturday Notes</label>"+
                                  "</div>"+
                                  "<div >"+
                                    "<input type=\"text\" class=\"slds-input hours\" id=\"SaturdayHours" + currentRowNum + "\"   value=\"" +saHours +  "\"/>"+
                                    "<input type=\"text\" class=\"slds-input notes\" id=\"SaturdayNotes" + currentRowNum + "\"  value=\"" +saNotes +  "\"/>"+
                                  "</div>"+
                                "<div class=\"slds-wrap\">"+
                                    "<label class=\"labelhours\" for=\"SundayHours" + currentRowNum + "\" >Sunday Hours</label>"+
                                    "<label class=\"labelnotes\" for=\"SundayNotes" + currentRowNum + "\" >Sunday Notes</label>"+
                                  "</div>"+
                                  "<div >"+
                                    "<input type=\"text\" class=\"slds-input hours\" id=\"SundayHours" + currentRowNum + "\"   value=\"" +suHours +  "\"/>"+
                                    "<input type=\"text\" class=\"slds-input notes\" id=\"SundayNotes" + currentRowNum + "\"  value=\"" +suNotes +  "\"/>"+
                                  "</div>"+
                                  "<div>"+
                                    "<label  for=\"WeeklyNotes\" style= \"font-size: 1.5em;\">Weekly Notes</label>"+
                                  "</div>"+
                                "<div >"+
                                    "<input type=\"text\" class=\"slds-input wnotes\" id=\"WeeklyNotes" + currentRowNum + "\"  value=\"" +weekNotes +  "\"/>"+
                                "</div>"+
                              "</div>"+
                            "</div>"+
                          "</div>";
        
 
                    cardString +=selectString; 
            }
 
           listString = 
               "<div id=\"listCard" + currentRowNum +"\" style=\"display: none;\">"+
                  "<div id=\"listMilestone" + currentRowNum +"\" class=\"slds-p-horizontal_small slds-size_1-of-1  slds-hint-parent slds-truncate\" style=\"font-size: 1.5em !important\" onclick=\"hideShowToolBar('" +milestoneName +"')\" title=\"" +milestoneName+"\">" + milestoneName +     
                  "</div> "+
 
                  "<div id=\"listProduct" + currentRowNum +"\" class=\"slds-p-horizontal_small slds-size_1-of-1  slds-hint-parent slds-truncate\" style=\"font-size: 1.5em !important\"  onclick=\"hideShowToolBar('" +productName +"')\" title=\"" +productName+"\">"+  productName + 
                  "</div> "+
 
                  "<div class=\"slds-p-horizontal_small slds-size_1-of-1  slds-hint-parent\">"+
                      "<div class=\"slds-grid slds-wrap slds-grid_pull-padded\">"+
                     
                        "<div class=\"slds-col--padded slds-size_1-of-12\" style=\"font-size: 1.5em !important;color: red; font-weight: bold;\">SUN"+
                        "</div>"+
                        "<div class=\"slds-col--padded slds-size_1-of-12\" style=\"font-size: 1.5em !important;color: blue; font-weight: bold;\">MON"+
                        "</div>"+
                        "<div class=\"slds-col--padded slds-size_1-of-12\" style=\"font-size: 1.5em !important;color: blue; font-weight: bold;\">TUE"+
                        "</div>"+
                        "<div class=\"slds-col--padded slds-size_1-of-12\" style=\"font-size: 1.5em !important;color: blue; font-weight: bold;\">WED"+
                        "</div>"+
                        "<div class=\"slds-col--padded slds-size_1-of-12\" style=\"font-size: 1.5em !important;color: blue; font-weight: bold;\">THU"+
                        "</div>"+
                        "<div class=\"slds-col--padded slds-size_1-of-12\" style=\"font-size: 1.5em !important;color: blue; font-weight: bold;\">FRI"+
                        "</div>"+
                        "<div class=\"slds-col--padded slds-size_1-of-12\" style=\"font-size: 1.5em !important;color: red; font-weight: bold;\">SAT"+
                        "</div>"+
                      "</div>  "+
 
                  "</div>"+
                  "<div class=\"slds-p-horizontal_small slds-size_1-of-1  slds-hint-parent\">"+
                     "<div class=\"slds-grid slds-wrap slds-grid_pull-padded\">   "+
 
                        "<div id=\"listsuHours" + currentRowNum +"\" class=\"slds-col--padded slds-size_1-of-12\" style=\"font-size: 1.5em !important\" onclick=\"hideShowToolBar('" +suNotes +"')\">"+ suHours2+
                        "</div>"+
                        "<div id=\"listmHours" + currentRowNum +"\" class=\"slds-col--padded slds-size_1-of-12\" style=\"font-size: 1.5em !important\" onclick=\"hideShowToolBar('" +mNotes +"')\">"+ mHours2+
                        "</div>"+
                        "<div id=\"listtHours" + currentRowNum +"\" class=\"slds-col--padded slds-size_1-of-12\" style=\"font-size: 1.5em !important\" onclick=\"hideShowToolBar('" +tNotes +"')\">"+ tHours2+
                        "</div>"+
                        "<div id=\"listwHours" + currentRowNum +"\" class=\"slds-col--padded slds-size_1-of-12\" style=\"font-size: 1.5em !important\" onclick=\"hideShowToolBar('" +wNotes +"')\">"+ wHours2+
                        "</div>"+
                        "<div id=\"listthHours" + currentRowNum +"\" class=\"slds-col--padded slds-size_1-of-12\" style=\"font-size: 1.5em !important\" onclick=\"hideShowToolBar('" +thNotes +"')\">"+thHours2 +
                        "</div>"+
                        "<div id=\"listfHours" + currentRowNum +"\" class=\"slds-col--padded slds-size_1-of-12\" style=\"font-size: 1.5em !important\" onclick=\"hideShowToolBar('" +fNotes +"')\">"+fHours2 +
                        "</div>"+
                        "<div id=\"listsaHours" + currentRowNum +"\" class=\"slds-col--padded slds-size_1-of-12\" style=\"font-size: 1.5em !important\" onclick=\"hideShowToolBar('" +saNotes +"')\">"+ saHours2+
                        "</div>"+
                      "</div>  "+
                  "</div>"+
               "</div>" ; 
 
             
 
        cardString += listString;        
        cardString +=
                    "</div>"+
                "</div>"+
              "</div>";
           "</article>";                 
    
       //$('#first').append(cardString);
       $('#summary2').before(cardString);
      
            if(records != undefined || global != undefined)
            {
              $('<option>').val('--None--').text('--None--').appendTo($('#AssignmentList' + currentRowNum)); 
            }            
                if(records != undefined && records.length > 0)
                {                      
                    for(var j=0;j<  records.length; j++)
                    {  
                        $('<option>').val(records[j].Id).text(records[j].Name).appendTo($('#AssignmentList' + currentRowNum));
                    }                           
                }          
 
                if(global != undefined)
                {                      
                    for(var j in global)
                    {                        
                        $('<option>').val(j).text(global[j].Name).appendTo($('#AssignmentList' + currentRowNum));
                    }                           
                }          
 
 
       if(timecard != undefined)
       {
            if(!(timecard.pse__Project__c in global))
            {
              $('#AssignmentList' + currentRowNum).val(timecard.pse__Assignment__c);
            }
            else
            {
               $('#AssignmentList' + currentRowNum).val(timecard.pse__Project__c); 
              $('#AssignmentDiv' + currentRowNum).hide();         
              $('#ProjectDiv' + currentRowNum).hide();         
            }
           
            createProjectFilter('noevent','#AssignmentList' + currentRowNum);
            $('#ProjectList' + currentRowNum).val(timecard.pse__Project__c);
            $('#ProductList' + currentRowNum).val(timecard.pse__Project_Methodology_Object__c);
            $('#MilestoneList' + currentRowNum).val(timecard.pse__Milestone__c);
       
        var viewBillable;         
            if(timecard.pse__Billable__c === true)
            {
                viewBillable = 'B'
                $('#bill'+currentRowNum).show();
                $('#icon'+currentRowNum).hide();
            }
            else
            {
                viewBillable = 'NB'
 
            }
 
      mondayView[viewBillable] = (parseFloat(mondayView[viewBillable]) + parseFloat(mHours)).toFixed(2);         
      tuesdayView[viewBillable] = (parseFloat(tuesdayView[viewBillable]) + parseFloat(tHours)).toFixed(2);
      wednesdayView[viewBillable] = (parseFloat(wednesdayView[viewBillable]) + parseFloat(wHours)).toFixed(2);
          thursdayView[viewBillable] = (parseFloat(thursdayView[viewBillable]) + parseFloat(thHours)).toFixed(2);
          fridayView[viewBillable] = (parseFloat(fridayView[viewBillable]) +parseFloat(fHours)).toFixed(2);
          saturdayView[viewBillable] = (parseFloat(saturdayView[viewBillable]) +parseFloat(saHours)).toFixed(2);
          sundayView[viewBillable] = (parseFloat(sundayView[viewBillable]) + parseFloat(suHours)).toFixed(2);
          totalView[viewBillable] = (parseFloat(totalView[viewBillable]) +parseFloat(mHours) + parseFloat(tHours) + parseFloat(wHours) + parseFloat(thHours) + parseFloat(fHours) + parseFloat(saHours) + parseFloat(suHours)).toFixed(2);
 
          $('.viewmHours').off('click');
          $('.viewtHours').off('click');
          $('.viewwHours').off('click');
          $('.viewthHours').off('click');
          $('.viewfHours').off('click');
          $('.viewsaHours').off('click');
          $('.viewsuHours').off('click');
 
          $('.viewmHours').on('click',function () {
            hideShowToolBar("Billable: " + mondayView['B'] + "Non: " + mondayView['NB'], true);
          });
          $('.viewtHours').on('click',function () {
            hideShowToolBar("Billable: " + tuesdayView['B'] + "Non: " + tuesdayView['NB'],true); 
          });
          $('.viewwHours').on('click',function () {
            hideShowToolBar("Billable: " + wednesdayView['B'] + "Non: " + wednesdayView['NB'],true); 
          });
         
          $('.viewthHours').on('click',function () {
            hideShowToolBar("Billable: " + thursdayView['B'] + "Non: " + thursdayView['NB'],true); 
          });
          $('.viewfHours').on('click',function () {
            hideShowToolBar("Billable: " + fridayView['B'] + "Non: " + fridayView['NB'],true); 
          });
          $('.viewsaHours').on('click',function () {
            hideShowToolBar("Billable: " + saturdayView['B'] + "Non: " + saturdayView['NB'],true); 
          });
          $('.viewsuHours').on('click',function () {
            hideShowToolBar("Billable: " + sundayView['B'] + "Non: " + sundayView['NB'],true); 
          });
          $('.viewsumHours').on('click',function () {
            hideShowToolBar("Billable: " + totalView['B'] + "Non: " + totalView['NB'],true); 
          });
 
       }
 
   $('#AssignmentList' + currentRowNum).selectize({      
        
      });
 
       if( timecard != undefined && (timecard.pse__Status__c === 'Saved' || timecard.pse__Status__c === 'Rejected' || timecard.pse__Status__c === 'Unsaved' || timecard.pse__Status__c === undefined))
       {
          $('#AssignmentDiv' + currentRowNum).hide();         
          $('#ProjectDiv' + currentRowNum).hide();         
       }
       else if(timecard != undefined && (timecard.pse__Status__c === 'Submitted' || timecard.pse__Status__c === 'Approved' ||timecard.pse__Status__c === 'Approver Level 1' ))
       {
          
           $('#listCard' + currentRowNum).show();
           $('#inputCard' + currentRowNum).hide();
       }
 
       currentRowNum++;
 
}
 
 
        function hideShowToolBar(message,showBottom)
        {
            if($('#tt') != undefined && $('#tt').css('opacity') > 0)
            {
                tooltip.hide();
            }
            else
            {
              if(showBottom){
                $('#tbot').css('margin-bottom','2px');     
              }
              else
              {
                $('#tbot').css('margin-bottom','');      
              }
              tooltip.show(message);
              setTimeout(function() {
                  tooltip.hide();
                  }, tooltipTimeout);             
            }
              
        }
 
        function timecard()
        {
          var pse__Resource__c;
          var pse__Project_Methodology_Object__c;
          var pse__Project__c;
          var pse__Milestone__c;
          var pse__Approver__c;
          var pse__Status__c;
          var Id;
          var pse__Assignment__c;
          var pse__Billable__c;
          var pse__Timecard_Notes__c;
          var pse__Monday_Hours__c = 0;
          var pse__Monday_Notes__c;
          var pse__Tuesday_Hours__c = 0;
          var pse__Tuesday_Notes__c;
          var pse__Wednesday_Hours__c = 0;
          var pse__Wednesday_Notes__c;
          var pse__Thursday_Hours__c = 0;
          var pse__Thursday_Notes__c;
          var pse__Friday_Hours__c = 0;
          var pse__Friday_Notes__c;
          var pse__Saturday_Hours__c = 0;
          var pse__Saturday_Notes__c;
          var pse__Sunday_Hours__c = 0;
          var pse__Sunday_Notes__c;
          var Name;                    
 
        }
 
 
        function b64EncodeUnicode(str)
        {
            // first we use encodeURIComponent to get percent-encoded UTF-8,
            // then we convert the percent encodings into raw bytes which
            // can be fed into btoa.
            return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g,
                function toSolidBytes(match, p1) {
                    return String.fromCharCode('0x' + p1);
            }));
        }
 
        function b64DecodeUnicode(str)
        {
            // Going backwards: from bytestream, to percent-encoding, to original string.
            return decodeURIComponent(atob(str).split('').map(function(c) {
                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
            }).join(''));
        }
 
        function printDate()
        {
         
          var date = $("#dateInput").val();
         
          if(date === '' || date === undefined)
          {
            date = new Date();
          }
          date = formatDate(lastSaturday(date));
          //console.log(date);
          $("#dateInput").val(date);
          weekStartDate = date;
          getRemoteTimecards();
        }
     
          function lastSunday(d)
          {
            var d = new Date(d);
            d.setDate(d.getDate() - d.getDay());           
            return d;
          }
 
          function lastSaturday(d)
          {
              var d = new Date(d);
              d.setDate(d.getDate() - d.getDay() + 6);
              //console.log(d);
              return d;
          }
 
          function formatDate(d)
          {
            var today  = d;
            var day = today.getDate();
            day = day < 10 ? '0' + day: day;
            var month = today.getMonth() + 1 ;
            month = month < 10? '0' + month : month;
            d = today.getFullYear() + '-' + month + '-' + day;
            return d;
 
          }
 
          function nextWeek()
          {
 
            var date = $("#dateInput").val();
            date = new Date(date);
            date = new Date(date.setDate(date.getDate() + 7));
            date = formatDate(date);
            $("#dateInput").val(date);
            weekStartDate = date;
            getRemoteTimecards();
 
          }
     
          function previousWeek()
          {
            var date = $("#dateInput").val();
            date = new Date(date);
            date = new Date(date.setDate(date.getDate() - 7));
            date = formatDate(date);
            $("#dateInput").val(date);
            weekStartDate = date;
            getRemoteTimecards();
          }
     
        $(document).ready(function () {       
          $('#status').show();         
          Visualforce.remoting.Manager.invokeAction
          (
              '{!$RemoteAction.PSA_TimeEntryController.getAccess}',
              function(result, event)
              {
                  var noAccessHtml = '<div style="font-size: initial;" ' +
                      'class="slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_info">' +
                      '<h6>You do not have access to the page</h6></div>';
                  if (event.status && result != undefined)
                  {
                      result = b64DecodeUnicode(result);
                      var metadata = JSON.parse(result).metadata;
                      limits = Number(metadata.Entry_Page_Batch__c);
                      tooltipTimeout = Number(metadata.Tooltip_Timeout__c);
                      messageTimeout = Number(metadata.Error_Message_Timeout__c);
                      var access = JSON.parse(result).access;
 
                      if (access === false)
                      {
                        $('#status').hide();         
                          showMessage('You do not have access to the page');
                                                                                                $('#mainDiv').html(noAccessHtml);
                      }
                      else if(access === true)
                      {
                         weekStartDate =  formatDate(lastSaturday(new Date()));
                         //console.log(weekStartDate);
                         getRemoteTimecards();
                    
                          $('#dateInput').val(weekStartDate);
 
                      }
 
                  }
                  else
                  {
                      $('#status').hide();         
                      showMessage('You do not have access to the page');
                      $('#mainDiv').html(noAccessHtml);
                  }
              }
           );            
 
          
        });
 
        function selectDeselect(cBox)
        {
 
            $('#AllPreferenceFieldSet input:checkbox').not(cBox).prop('checked', cBox.checked);
        }
     
 
 
        String.prototype.replaceAll = function(search, replacement)
        {
          var target = this;
          return target.split(search).join(replacement);
        };
 
        function addTableRow(rowNum,calledFrom,clones)
        {
            var j =0;
            var counter = Number(currentRowNum) + Number(rowNum);
            var i = currentRowNum;
            var Names = {};
            for(; i< counter; i++)
            {
              var id = "timecard" + i;
              if(calledFrom === 'NoClone' && clones.length > 0 && j < clones.length)
              {
                var newTimecard = new timecard();
              newTimecard.pse__Resource__c = clones[j].pse__Resource__c;
              newTimecard.pse__Project_Methodology_Object__c = clones[j].pse__Project_Methodology_Object__c;
              newTimecard.pse__Project__c = clones[j].pse__Project__c;
              newTimecard.pse__Milestone__c = clones[j].pse__Milestone__c;
              newTimecard.pse__Approver__c = clones[j].pse__Approver__c;
              newTimecard.pse__Status__c = clones[j].pse__Status__c;
              newTimecard.Id = clones[j].Id;
              newTimecard.pse__Assignment__c = clones[j].pse__Assignment__c;
              newTimecard.pse__Billable__c = clones[j].pse__Billable__c;
              newTimecard.pse__Timecard_Notes__c = clones[j].pse__Timecard_Notes__c;
              newTimecard.pse__Monday_Hours__c = clones[j].pse__Monday_Hours__c;
              newTimecard.pse__Monday_Notes__c = clones[j].pse__Monday_Notes__c;
              newTimecard.pse__Tuesday_Hours__c = clones[j].pse__Tuesday_Hours__c;
              newTimecard.pse__Tuesday_Notes__c = clones[j].pse__Tuesday_Notes__c;
              newTimecard.pse__Wednesday_Hours__c = clones[j].pse__Wednesday_Hours__c;
              newTimecard.pse__Wednesday_Notes__c = clones[j].pse__Wednesday_Notes__c;
              newTimecard.pse__Thursday_Hours__c = clones[j].pse__Thursday_Hours__c;
              newTimecard.pse__Thursday_Notes__c = clones[j].pse__Thursday_Notes__c;
              newTimecard.pse__Friday_Hours__c = clones[j].pse__Friday_Hours__c;
              newTimecard.pse__Friday_Notes__c = clones[j].pse__Friday_Notes__c;
              newTimecard.pse__Saturday_Hours__c = clones[j].pse__Saturday_Hours__c;
              newTimecard.pse__Saturday_Notes__c = clones[j].pse__Saturday_Notes__c;
              newTimecard.pse__Sunday_Hours__c = clones[j].pse__Sunday_Hours__c;
              newTimecard.pse__Sunday_Notes__c = clones[j].pse__Sunday_Notes__c;
              //newTimecard.Name = clones[j].Name;
 
              // Names['Assignment'] = clones[j].pse__Assignment__r.Name;             
              // Names['Milestone'] = clones[j].pse__Milestone__r.Name;
              // Names['Product'] = clones[j].pse__Project_Methodology_Object__r.Name;
 
                timecardIdToRecord[id] = newTimecard;
 
                //configureToolTip(id,newTimecard);
                if(newTimecard.pse__Status__c != 'Saved' && newTimecard.pse__Status__c != 'Rejected')
               
                {
                  createCard(true,clones[j]);
                }
                else
                {
                  createCard(false,clones[j]);
                }
                j++;
              }
              else if(calledFrom === 'Clone' && clones.length > 0 && j < clones.length)
              {
                var newTimecard = jQuery.extend({}, clones[j]);;
                newTimecard.pse__Status__c = undefined;
                newTimecard.Id = undefined;
 
                if(newTimecard.pse__Monday_Hours__c === undefined)
                {
                    newTimecard.pse__Monday_Hours__c = 0;
                }
                if(newTimecard.pse__Tuesday_Hours__c === undefined)
                {
                    newTimecard.pse__Tuesday_Hours__c = 0;
                }
                if(newTimecard.pse__Wednesday_Hours__c === undefined)
                {
                    newTimecard.pse__Wednesday_Hours__c = 0;
                }
                if(newTimecard.pse__Thursday_Hours__c === undefined)
                {
                    newTimecard.pse__Thursday_Hours__c = 0;
                }
                if(newTimecard.pse__Friday_Hours__c === undefined)
                {
                    newTimecard.pse__Friday_Hours__c = 0; 
                }
                if(newTimecard.pse__Saturday_Hours__c === undefined)
                {
                    newTimecard.pse__Saturday_Hours__c = 0; 
                }
                if(newTimecard.pse__Sunday_Hours__c === undefined)
                {
                    newTimecard.pse__Sunday_Hours__c = 0; 
                }
                
                timecardIdToRecord[id] = newTimecard;
                createCard(false,newTimecard);
                j++;
 
              }
              else if(calledFrom != '' && calledFrom != undefined && calledFrom.length >= 19 && clones.length > 0 && j < clones.length)
              {
                  var pref = calledFrom.split(',');
                  var newTimecard = new timecard();
                  newTimecard.pse__Resource__c = clones[j].pse__Resource__c;
                  newTimecard.pse__Approver__c = clones[j].pse__Approver__c;
                 
                  newTimecard.pse__Project__c = clones[j].pse__Project__c;
                  newTimecard.pse__Status__c = undefined;
                  newTimecard.Id = undefined;
                  newTimecard.pse__Assignment__c = clones[j].pse__Assignment__c;
                  newTimecard.pse__Billable__c = clones[j].pse__Billable__c;      
 
                  newTimecard.pse__Monday_Hours__c = 0;
                  newTimecard.pse__Tuesday_Hours__c = 0;
                  newTimecard.pse__Wednesday_Hours__c = 0;
                  newTimecard.pse__Thursday_Hours__c = 0;
                  newTimecard.pse__Friday_Hours__c = 0;
                  newTimecard.pse__Saturday_Hours__c = 0;
                  newTimecard.pse__Sunday_Hours__c = 0;
 
 
                  if(pref[0] === 'true')
                  {
                      newTimecard.pse__Milestone__c = clones[j].pse__Milestone__c; 
                  }
                 
                  if(pref[1] === 'true')
                  {
                      newTimecard.pse__Project_Methodology_Object__c = clones[j].pse__Project_Methodology_Object__c;  
                  }
                  
                  if(pref[2] === 'true')
                  {
                    newTimecard.pse__Monday_Hours__c = clones[j].pse__Monday_Hours__c;
                    newTimecard.pse__Tuesday_Hours__c = clones[j].pse__Tuesday_Hours__c;
                    newTimecard.pse__Wednesday_Hours__c = clones[j].pse__Wednesday_Hours__c;
                    newTimecard.pse__Thursday_Hours__c = clones[j].pse__Thursday_Hours__c;
                    newTimecard.pse__Friday_Hours__c = clones[j].pse__Friday_Hours__c;
                    newTimecard.pse__Saturday_Hours__c = clones[j].pse__Saturday_Hours__c;
                    newTimecard.pse__Sunday_Hours__c = clones[j].pse__Sunday_Hours__c;
 
                  }                 
                  if(pref[3] === 'true' )
                  {
                    newTimecard.pse__Timecard_Notes__c = clones[j].pse__Timecard_Notes__c;                 
                    newTimecard.pse__Monday_Notes__c = clones[j].pse__Monday_Notes__c;                 
                    newTimecard.pse__Tuesday_Notes__c = clones[j].pse__Tuesday_Notes__c;                 
                    newTimecard.pse__Wednesday_Notes__c = clones[j].pse__Wednesday_Notes__c;                 
                    newTimecard.pse__Thursday_Notes__c = clones[j].pse__Thursday_Notes__c;                 
                    newTimecard.pse__Friday_Notes__c = clones[j].pse__Friday_Notes__c;                 
                    newTimecard.pse__Saturday_Notes__c = clones[j].pse__Saturday_Notes__c;                
                    newTimecard.pse__Sunday_Notes__c = clones[j].pse__Sunday_Notes__c;
 
                  }
 
                  timecardIdToRecord[id] = newTimecard;
                  createCard(false,newTimecard);
                  j++;
 
              }
              else
              {
                timecardIdToRecord[id] = new timecard(); 
                createCard(false);             
              }
             
            }
            //currentRowNum += rowNum;
            //console.log(timecardIdToRecord);
            //$('#status').hide();
        }
 
 
        function showMessage(text1)
        {
                $('#MessagePTag').text(text1);
                $('#messages').css('display','block');
                $('#messages').modal('show');
 
        }
     
        function showAddRows()
        {
          $('#rowAdd').show();
        }
 
        function hideAddRows()
        {
          $('#rowAdd').hide();
        }
 
         function showConfirm()
         {
                $("#commentsDialog").show();
         }
 
         function hideConfirm()
         {
                $("#commentsDialog").hide();
         }
 
  function showHours2(refId)
  {
    var id = $(refId).attr("id");
    id = id.substring(4, id.length);
   
    $('#collapse' + id).show();
    $('#right' + id).show();
    $('#down' + id).hide();
  }
 
  function hideHours2(refId)
  {
    var id = $(refId).attr("id");
    id = id.substring(5, id.length);
 
    $('#collapse' + id).hide();
    $('#right' +id).hide();
    $('#down' + id).show();
     
  }
 
        function showHours()
        {
            $('#hoursBlock').show();                   
        }
      
        function hideHours()
        {
          $('#hoursBlock input').prop('checked', false);
          $('#hoursBlock').hide();         
        }
     
        function copyPreference()
        {
            var Milestone = $('#MilestoneCopy').is(":checked");
            var Product = $('#ProductCopy').is(":checked");
            var HoursPref = $('#HoursCopy').is(":checked");
            var NotesPref = $('#NotesCopy').is(":checked");
           
            $('#status').show(); 
                Visualforce.remoting.Manager.invokeAction
                (
                    '{!$RemoteAction.PSA_TimeEntryController.getTimecardsPreviousWeek}',
                    weekStartDate,
                    Milestone,
                    Product,
                    HoursPref,
                    NotesPref,
                    function(result, event)
                    {
                        if (event.status && result != undefined)
                        {
                            if (result === 'No Records')
                            {
                              $('#status').hide();       
                                showMessage('No Timecards to copy!!!');
                                 return;
                            }
                            //result = result.replaceAll('&quot','"').replaceAll(';','');                       
                            result = b64DecodeUnicode(result);
                            var ObjectJSON = JSON.parse(result).Objects;
                            olderTimecards = ObjectJSON[0].timecards;
                            var pref = Milestone + ',' + Product + ',' + HoursPref + ',' + NotesPref;
                            if(olderTimecards != undefined && olderTimecards.length > 0)
                            {
                              cloneRows(olderTimecards,pref);
                            }
 
                        }
                        else
                        {  
                          $('#status').hide();                            
                            showMessage(event.message);   
                        }                        
                        $('#status').hide();       
                    }
                );
                hideHours();
        }
     
        function showAssignment(weekDir)
       {    
          var callModal = false;
          for (var key in timecardIdToRecord)
          {
              if(timecardIdToRecord[key].pse__Status__c === '' || timecardIdToRecord[key].pse__Status__c === undefined || timecardIdToRecord[key].pse__Status__c === 'Unsaved')
              {
                  var id = key.substring(8,key.length);
                  if ($('#AssignmentList' + id).val() != undefined && $('#AssignmentList' + id).val() != '--None--' && $('#AssignmentList' + id).val() != '')
                  {
                    callModal = true;
                    break;
 
                  }             
              }
          }
          if(callModal)
          {
              $('#weekDir').text(weekDir);
              $('#assignmentBlock').show();              
          }
          else
          {
              if(weekDir === 'left')
              {
                 previousWeek();
              }
              else
              {
                 nextWeek();
              }
              $('#first').scrollTop(0);
          }
        }
 
        function hideAssignment()
        {
          $('#assignmentBlock').hide();         
        }
 
        function callWeekFunc()
        {
            hideAssignment(); 
            if($('#weekDir').text() === 'left')
            {
                previousWeek();
            }
            else if ($('#weekDir').text() === 'right' )
            {
                nextWeek();
            }
            $('#first').scrollTop(0);
        }
     
        function addRows()
        {
          var numberToAdd = $('#numberAdd').val();
          //numberToAdd = Number(numberToAdd) + 1;
          //console.log(numberToAdd);
          if(numberToAdd >=1 && numberToAdd <= 50)
          {          
            for(var i = 0; i < numberToAdd; i++)
            {
              createCard(false);
            }
          }
          else
          {
            showMessage('Enter between 1 and 50');
          }
          $('#rowAdd').hide();
 
        }
 
       function getRemoteTimecards(clones,action)
       {    
             $('input:checkbox').prop('checked', false);    
            $('#status').show(); 
                Visualforce.remoting.Manager.invokeAction
                (
                    '{!$RemoteAction.PSA_TimeEntryController.getAssignmentsTimecards}',
                    weekStartDate,
                    function(result, event)
                    {
                        if (event.status && result != undefined)
                        {
 
                            //$("#first").empty();                           
                            //$('#first').find('*').not('.summaryView').remove();
                            $("#first > *:not('.summaryView')").remove();
                  $('.summarymHours').html(0);
                  $('.summarytHours').html(0);
                  $('.summarywHours').html(0);
                  $('.summarythHours').html(0);
                  $('.summaryfHours').html(0);
                  $('.summarysaHours').html(0);
                  $('.summarysuHours').html(0);
                  $('.summarysumHours').html(0);
 
 
                 mondayView['B'] = 0;
                 mondayView['NB'] = 0;
 
                 tuesdayView['B'] = 0;
                 tuesdayView['NB'] = 0;
 
                 wednesdayView['B'] = 0;
                 wednesdayView['NB'] = 0;
 
                 thursdayView['B'] = 0;
                 thursdayView['NB'] = 0;
 
                 fridayView['B'] = 0;
                 fridayView['NB'] = 0;
 
                 saturdayView['B'] = 0;
                 saturdayView['NB'] = 0;
 
                 sundayView['B'] = 0;
                 sundayView['NB'] = 0;
             
                 totalView['B'] = 0;
                 totalView['NB'] = 0;
 
                            currentRowNum = 0;
                            assignmentIdToRecord = {};
                            timecardIdToRecord = {};
                            assignmentOptions = [];
                            if (result === 'No Records' || result === 'Current user has no PSA Contact record')
                            {
                              $('#status').hide();
                              if(result === 'No Records')
                              {
                                  showMessage('No Assigments!!!');
                              }
                              else
                              {
                                showMessage(result); 
                              }       
                                
                                 return;
                            }
                            //result = result.replaceAll('&quot','"').replaceAll(';',''); 
                            result = b64DecodeUnicode(result);
                            var ObjectJSON = JSON.parse(result).Objects;
                            records = ObjectJSON[0].assignments;
                            milestones = ObjectJSON[1].milestones;
                            products = ObjectJSON[2].products;
                            olderTimecards = ObjectJSON[3].timecards;
                            global = ObjectJSON[4].global;
                            // console.log(global);
                            contact = ObjectJSON[5].contact;
                            // console.log(olderTimecards);
                            prepareFilters();
                            if(olderTimecards != undefined && olderTimecards.length > 0)
                            {
                              cloneRows(olderTimecards,'NoClone');
                            }
                            if(clones != undefined && clones.length > 0 && action === 'Clone')
                            {
                                cloneRows(clones,'Clone');
                            }
                            addTableRow(5);   
                             
                            //createCard(false);
                        }
                        else
                        {  
                          $('#status').hide();                            
                            showMessage(event.message);   
                        }                        
                        $('#status').hide();       
                    }
                );
           
        }
 
        function cloneRows(clones,type)
        {
          addTableRow(clones.length,type,clones);
          $('input:checkbox').prop('checked', false);
          if(type != 'NoClone')
          {
            $('#first').scrollTop($('#first')[0].scrollHeight);
          }
 
        }
 
        function performAction(action)
        {
          currentScrollPos = $(window).scrollTop();
          
            $('#status').show(); 
            hideConfirm();             
            var timecards = {};           
            var actionMethod = '';
            var localDelete = [];
            var errorDelete = [];
            var clones = [];
            var cloneDateDiff = [];
            var localaction = action;
            $("input:checkbox").not($('#selectAll')).each(function()
            {
                var $this = $(this);
 
                var currentTimecard;
                if($this.is(":checked"))
                {    
                  if(action === 'Save' || action === 'Submit')
                  {
                    if(timecardIdToRecord[$this.attr("id")].pse__Status__c === 'Saved' || timecardIdToRecord[$this.attr("id")].pse__Status__c === 'Rejected' || timecardIdToRecord[$this.attr("id")].pse__Status__c === '' || timecardIdToRecord[$this.attr("id")].pse__Status__c === undefined)
                    {
                      currentTimecard = saveChangesHour($this.attr("id"));
                      if(currentTimecard != 'drop' )
                      {
                        timecardIdToRecord[$this.attr("id")] =  currentTimecard;
                        timecards[$this.attr("id")] = currentTimecard;                       
                      }
                      else
                      {
                        errorDelete.push($this.attr("id"));
                      }
                     
                      
                    }
                    else
                    {
                      errorDelete.push($this.attr("id"));
                    }
                  }
                  else if(action === 'Recall')
                  {
                    if(timecardIdToRecord[$this.attr("id")].pse__Status__c === 'Submitted' || timecardIdToRecord[$this.attr("id")].pse__Status__c === 'Approver Level 1' )
                    {
                      timecards[$this.attr("id")] = timecardIdToRecord[$this.attr("id")].Id; 
                    }
                    else
                    {
                      errorDelete.push($this.attr("id"));
                    }
                   
                  }
                  else if( action === 'Delete')
                  {
                    if(timecardIdToRecord[$this.attr("id")].pse__Status__c === '' || timecardIdToRecord[$this.attr("id")].pse__Status__c === undefined || timecardIdToRecord[$this.attr("id")].pse__Status__c === 'Unsaved')
                    {
 
                      var rowID = '#article' + $this.attr("id").substring(8,$this.attr("id").length);
                      localDelete.push($this.attr("id"));
                      $(rowID).remove();
                      if(timecardIdToRecord[$this.attr("id")] != undefined)
                      {
                        delete timecardIdToRecord[$this.attr("id")]; 
                      }
                     
                    }
                    else if(timecardIdToRecord[$this.attr("id")].pse__Status__c === 'Saved' )
                    {
                      timecards[$this.attr("id")] = timecardIdToRecord[$this.attr("id")].Id; 
                    }                  
                    else
                    {
                      errorDelete.push($this.attr("id"));
                    }
                      
                  }
                  else if(action === 'Clone' && timecardIdToRecord[$this.attr("id")].pse__Status__c != '' && timecardIdToRecord[$this.attr("id")].pse__Status__c != undefined && timecardIdToRecord[$this.attr("id")].pse__Status__c != 'Unsaved')
                  {
                          var currentAssignment;
                          var id = $this.attr("id").substring(8,$this.attr("id").length);
                          var projectId = $('#AssignmentList' + id).val();
 
                         if(!(projectId in global))
                         {
                            currentAssignment = assignmentIdToRecord[timecardIdToRecord[$this.attr("id")].pse__Assignment__c];
                          }
                          else
                          {
                            currentAssignment = assignmentIdToRecord[timecardIdToRecord[$this.attr("id")].pse__Project__c];
 
                          } 
                          var startDate = currentAssignment.pse__Start_Date__c;
                          var endDate = currentAssignment.pse__End_Date__c;   
                        
                           
                          var currentWeekStart = formatDate(lastSunday(new Date()));
                          var currentWeekEnd = formatDate(lastSaturday(new Date()));
                         
                          console.log('currentWeekEnd: ' + currentWeekEnd + ' currentWeekStart: ' + currentWeekStart + 'Start Date: ' + startDate + ' End date: ' + endDate);
                          if(startDate <= currentWeekStart && endDate >= currentWeekEnd)
                          {
                              clones.push(timecardIdToRecord[$this.attr("id")]);   
                          }
                          else
                          {
                              console.log("push: " + $this.attr("id"));
                              cloneDateDiff.push($this.attr("id"));
                          }                           
                          
                  }
                   
                }
            });
           
            //console.log(timecards);
            if(action === 'Save' || action === 'Submit')
            {
              actionMethod = '{!$RemoteAction.PSA_TimeEntryController.saveSubmitTimecards}';
            }
            else if(action === 'Recall')
            {
              //console.log(timecards);
 
              if(Object.keys(timecards).length > 1)
              {
                  $('#status').hide();
                  $('input:checkbox').prop('checked', false);
                  showMessage('You can Recall Only one timecard at a time!');
                  return;
              }
              localaction = $("#comments").val();
              actionMethod = '{!$RemoteAction.PSA_TimeEntryController.recallTimecards}'; 
            }
            else if(action === 'Delete')
            {
              //console.log('delete method abt to be ');
              actionMethod = '{!$RemoteAction.PSA_TimeEntryController.deleteTimecards}';   
            }
            else if(action === 'Clone' && (clones.length > 0 ||cloneDateDiff.length > 0))
            {
              if(cloneDateDiff.length > 0)
              {    
                    //console.log(cloneDateDiff);
                    for(var errIndex = 0; errIndex <cloneDateDiff.length; errIndex++)
                    {
                        var errId = cloneDateDiff[errIndex].substring(8,cloneDateDiff[errIndex].length);
                        $('#hourError' + errId).text('Check the assignment Start/End Date to copy this timecard to the current week').css('color','red').css('font-size','12px').show();
                        $('input:checkbox').prop('checked', false);
                        setTimeout(function() {
                              $("[id*=hourError]").hide();
                              }, messageTimeout);             
                    }
                    $('#status').hide();
                    showMessage('The timecards were not cloned due to errors');
                    return;
 
              }
              var pageWeek = $("#dateInput").val();
             
              if(pageWeek === '' || pageWeek === undefined)
              {
                pageWeek = new Date();
              }
              pageWeek = formatDate(lastSaturday(pageWeek));
 
              var currentWeek = new Date();
              currentWeek = formatDate(lastSaturday(currentWeek));
 
              if(currentWeek === pageWeek)
              {
                cloneRows(clones,'Clone'); 
                $('#status').hide(); 
                
              }
              else
              {
                $("#dateInput").val(currentWeek);
                weekStartDate = currentWeek;
                getRemoteTimecards(clones,'Clone');
 
              }
              return;
            }
            $('input:checkbox').prop('checked', false);
            if(Object.keys(timecards).length === 0)
            {
              $('#status').hide();
              if(action === 'Delete' && localDelete.length > 0)
              {
                showMessage('Deleted '+ localDelete.length + ' timecards');
              }
              else if((action === 'Delete' && localDelete.length === 0  && errorDelete.length ===0) || (action === 'Clone' && clones.length === 0 && cloneDateDiff.length === 0)|| (action != 'Delete' && action != 'Clone' && errorDelete.length ===0) )
              {
                showMessage('No Records selected to ' + action);
              }
                else if(errorDelete.length > 0)                
                {
                  if(action === 'Delete' || action === 'Save')
                  {
                    action += 'd';
                  }
                  else
                  {
                    action +='ed';
                  }
                  showMessage('Records cannot be ' + action );
                }
                summaryHours();
                return;           
            }
 
            var timecardsJSON = b64EncodeUnicode(JSON.stringify(timecards));
 
           
        //$('#status').show();
       
                Visualforce.remoting.Manager.invokeAction
                (
                    actionMethod,
                    timecardsJSON,
                    localaction,
                    limits,
                    weekStartDate,               
                    function(result, event)
                    {                  
                        if (event.status && result != undefined)
                        {
                          if(result === 'error')
                          {
                            $(window).scrollTop(currentScrollPos);     
                            $('#status').hide();
                            showMessage('Error!!');
                            return;
                          }
                            //result = result.replaceAll('&quot','"').replaceAll(';','');
                            //result = decodeURIComponent(escape(s));
                            result = b64DecodeUnicode(result);
                            var timecards = JSON.parse(result).timecards;
                            var errors = JSON.parse(result).errors;
                            if(action === 'Delete')
                            {
                              for(var i =0; i< timecards.length; i++)
                              {
                                var rowId = '#article' + timecards[i].substring(8,timecards[i].length) ;
                                delete timecardIdToRecord[timecards[i]];
                                $(rowId).remove();
                              }
                              var totaldelete = 0;
                              if(localDelete != null && localDelete.length > 0)
                              {
                                  totaldelete = localDelete.length + timecards.length;                                 
                              }
                              else
                              {
                                  totaldelete = timecards.length;
                              }
                              summaryHours();
                              showMessage('Deleted ' + totaldelete + ' timecards');
                            }
                            else if(action === 'Save' || action === 'Submit')
                            {
                              var successCount = 0;
                              for(var key in timecards)
                              {
                                
                                timecardIdToRecord[key].Id = timecards[key].Id;
                                timecardIdToRecord[key].pse__Status__c = timecards[key].Status;
                                if(action === 'Save' && timecards[key].Status === 'Saved' || action === 'Submit' && timecards[key].Status === 'Submitted')
                                {
                                  successCount++;
                                }
 
                                var id = key.substring(8,key.length);
                                var stId = '#status' + id;                               
                      
                                $(stId).text(timecards[key].Status);
                                $('#collapse' + id).hide();  
                                if(timecards[key].Status != 'Saved' && timecards[key].Status != 'Rejected')
                                {
                                    $('#inputCard' + id).hide();
                                    $('#listCard' + id).show();
 
                                }
                                else
                                {
                                    $('#AssignmentDiv' + id).hide();
                                    $('#ProjectDiv' + id).hide();
                                    $('#right' + id).hide();
                                    $('#down' + id).show();                                   
                                }
                                $('#hourError' + id).hide();
                              }
                              var actionPrefix = action === 'Save'? 'Saved' : 'Submitted';
                              showMessage(actionPrefix + ' ' + successCount + ' records');
                            }
                            else if(action === 'Recall')
                            {
                              for(var i =0; i< timecards.length; i++)
                              {
                                  timecardIdToRecord[timecards[i]].pse__Status__c = 'Saved';
                                  var id = timecards[i].substring(8,timecards[i].length);
                                  var stId = '#status' + id;
                     
                                  $(stId).text('Saved');                    
                                  $('#inputCard' + id).show();
                                  $('#AssignmentDiv'+ id).hide();
                                  $('#ProjectDiv'+ id).hide();
                                  $('#listCard' + id).hide();
                                $('#right' + id).hide();
                                $('#down' + id).show();                                   
 
 
                              }
                              showMessage('Recalled ' + timecards.length + ' timecards');
                            }
                            if(errorDelete.length > 0 && action === 'Delete')
                            {
                              showMessage('Only Saved timecards can be deleted');
                            }
                            if(errors != undefined)
                            {
                                for(var errIndex in errors)
                                {
                                  var errId = errIndex.substring(8,errIndex.length);
                                  $('#hourError' + errId).text(errors[errIndex]).css('color','red').css('font-size','12px').show();
                                  setTimeout(function() {
                                      $("[id*=hourError]").hide();
                                  }, messageTimeout);             
 
                                }
                                //showMessage(''+errors);       
                            }
                            // else
                            // {
                            //   showMessage('Success');        
                            // }                                                  
                        }
                        else
                        {                       
                            showMessage(event.message);   
                        }
 
                        $(window).scrollTop(currentScrollPos);
                        $('#status').hide();
                    }
                );
                   
 
        }
     
       function prepareFilters()
       {
                if(records != undefined && records.length > 0)
                {  
                    
                    for(var j=0;j<  records.length; j++)
                    {  
                      assignmentIdToRecord[records[j].Id] = records[j];
                       
                    }                           
                } 
                if(global != undefined )
                {
                    for(var j in global)
                    {  
                        assignmentIdToRecord[j] = global[j];
                       
                    }                            
 
                }        
       }
 
 
       function customDecimal(hours)
       {
          var h = hours.split(' ');
          var part2=0;
          if(h.length === 2)
          {
            part2 = Number(h[1]) / 60.0;
            //part2 = part2.toFixed(2);
          }
          var decimalNum = Number(h[0]) + part2;
 
          return decimalNum;
 
       }
 
       function summaryHours()
       {
            var mHours = 0;
          var tHours = 0;
          var wHours = 0;
          var thHours = 0;
          var fHours = 0;
          var saHours = 0;
          var suHours = 0;
 
            var currentmHours = 0;
          var currenttHours = 0;
          var currentwHours = 0;
          var currentthHours = 0;
          var currentfHours = 0;
          var currentsaHours = 0;
          var currentsuHours = 0;
 
          var currenttotalHours = 0;
 
          var viewBillable;
            mondayView['B'] = 0;
            mondayView['NB'] = 0;
 
            tuesdayView['B'] = 0;
            tuesdayView['NB'] = 0;
 
            wednesdayView['B'] = 0;
            wednesdayView['NB'] = 0;
 
            thursdayView['B'] = 0;
            thursdayView['NB'] = 0;
 
            fridayView['B'] = 0;
            fridayView['NB'] = 0;
 
            saturdayView['B'] = 0;
            saturdayView['NB'] = 0;
 
            sundayView['B'] = 0;
            sundayView['NB'] = 0;
       
            totalView['B'] = 0;
            totalView['NB'] = 0;
 
        for(var id in timecardIdToRecord)
        {
 
            var timecard = timecardIdToRecord[id];
            if(timecard != undefined)
            {
                  currentmHours = timecard.pse__Monday_Hours__c != undefined ? timecard.pse__Monday_Hours__c:0;
 
                  currenttHours = timecard.pse__Tuesday_Hours__c != undefined ? timecard.pse__Tuesday_Hours__c:0;
                  currentwHours = timecard.pse__Wednesday_Hours__c != undefined ? timecard.pse__Wednesday_Hours__c:0;
                  currentthHours = timecard.pse__Thursday_Hours__c != undefined ? timecard.pse__Thursday_Hours__c:0;
                  currentfHours = timecard.pse__Friday_Hours__c != undefined ? timecard.pse__Friday_Hours__c:0;
                  currentsaHours = timecard.pse__Saturday_Hours__c != undefined ? timecard.pse__Saturday_Hours__c:0;
                  currentsuHours = timecard.pse__Sunday_Hours__c != undefined ? timecard.pse__Sunday_Hours__c:0;
 
                  currenttotalHours = currentmHours + currenttHours + currentwHours +currentthHours +currentfHours + currentsaHours + currentsuHours;
                     
                  mHours += currentmHours;
                  tHours += currenttHours;
                  wHours += currentwHours;
                  thHours += currentthHours;
                  fHours += currentfHours;
                  saHours += currentsaHours;
                  suHours += currentsuHours;
                 
 
                  if(timecard.pse__Billable__c === true)
                    {    
                      viewBillable = 'B';
 
                    }
                    else
                    {
                    viewBillable = 'NB';
 
                    }
 
                mondayView[viewBillable] = (parseFloat(mondayView[viewBillable]) + currentmHours).toFixed(2);            
                tuesdayView[viewBillable] = (parseFloat(tuesdayView[viewBillable]) + currenttHours).toFixed(2);
                wednesdayView[viewBillable] = (parseFloat(wednesdayView[viewBillable]) + currentwHours).toFixed(2);
                    thursdayView[viewBillable] = (parseFloat(thursdayView[viewBillable]) + currentthHours).toFixed(2);
                    fridayView[viewBillable] = (parseFloat(fridayView[viewBillable]) +currentfHours).toFixed(2);
                    saturdayView[viewBillable] = (parseFloat(saturdayView[viewBillable]) +currentsaHours).toFixed(2);
                    sundayView[viewBillable] = (parseFloat(sundayView[viewBillable]) + currentsuHours).toFixed(2);
                    totalView[viewBillable] = (parseFloat(totalView[viewBillable]) +currenttotalHours).toFixed(2);
 
 
            }
 
        }  
 
        $('.summarymHours').html( parseFloat(mHours).toFixed(2));
            $('.summarytHours').html( parseFloat(tHours).toFixed(2));
            $('.summarywHours').html(parseFloat(wHours).toFixed(2));
            $('.summarythHours').html(parseFloat(thHours).toFixed(2));
            $('.summaryfHours').html(parseFloat(fHours).toFixed(2));
            $('.summarysaHours').html(parseFloat(saHours).toFixed(2));
            $('.summarysuHours').html(parseFloat(suHours).toFixed(2));
            $('.summarysumHours').html(parseFloat(mHours + tHours+ wHours+ thHours + fHours + saHours + suHours).toFixed(2));
 
            $('.viewmHours').off('click');
            $('.viewtHours').off('click');
            $('.viewwHours').off('click');
            $('.viewthHours').off('click');
            $('.viewfHours').off('click');
            $('.viewsaHours').off('click');
            $('.viewsuHours').off('click');
 
            $('.viewmHours').on('click',function () {
              hideShowToolBar("Billable: " + mondayView['B'] + "Non: " + mondayView['NB'], true);
            });
            $('.viewtHours').on('click',function () {
              hideShowToolBar("Billable: " + tuesdayView['B'] + "Non: " + tuesdayView['NB'],true); 
            });
            $('.viewwHours').on('click',function () {
              hideShowToolBar("Billable: " + wednesdayView['B'] + "Non: " + wednesdayView['NB'],true); 
            });
           
            $('.viewthHours').on('click',function () {
              hideShowToolBar("Billable: " + thursdayView['B'] + "Non: " + thursdayView['NB'],true); 
            });
            $('.viewfHours').on('click',function () {
              hideShowToolBar("Billable: " + fridayView['B'] + "Non: " + fridayView['NB'],true); 
            });
            $('.viewsaHours').on('click',function () {
              hideShowToolBar("Billable: " + saturdayView['B'] + "Non: " + saturdayView['NB'],true); 
            });
            $('.viewsuHours').on('click',function () {
              hideShowToolBar("Billable: " + sundayView['B'] + "Non: " + sundayView['NB'],true); 
            });
            $('.viewsumHours').on('click',function () {
              hideShowToolBar("Billable: " + totalView['B'] + "Non: " + totalView['NB'],true); 
            });
 
       }
     
       function saveChangesHour(timecardId)
       {
         
          var timecardRecord = timecardIdToRecord[timecardId];
          var id = timecardId.substring(8,timecardId.length);
          var projectId = $('#AssignmentList' + id).val();
          $('#hourError' + id).hide();
            if(!(projectId in global))
            {            
 
              timecardRecord.pse__Assignment__c = $('#AssignmentList' + id).val();               
              timecardRecord.pse__Project__c = $('#ProjectList' + id).val();
              projectId = $('#ProjectList' + id).val();
            }
            else
            {
              timecardRecord.pse__Project__c = projectId;
            }           
            
            timecardRecord.pse__Project_Methodology_Object__c = $('#ProductList' + id).val();
            timecardRecord.pse__Milestone__c = $('#MilestoneList' + id).val();
            timecardRecord.Id = timecardIdToRecord[timecardId].Id;
 
            var milestoneBillable = milestones[timecardRecord.pse__Milestone__c];
           
            if(timecardRecord.pse__Project__c === undefined|| timecardRecord.pse__Project__c ==='' || timecardRecord.pse__Project__c ==='--None--'|| ((timecardRecord.pse__Assignment__c === undefined || timecardRecord.pse__Assignment__c === '' || timecardRecord.pse__Assignment__c === '--None--') && !(timecardRecord.pse__Project__c in global))||timecardRecord.pse__Project_Methodology_Object__c === undefined||timecardRecord.pse__Project_Methodology_Object__c === '' ||timecardRecord.pse__Project_Methodology_Object__c === '--None--' || timecardRecord.pse__Milestone__c === undefined|| timecardRecord.pse__Milestone__c === '' || timecardRecord.pse__Milestone__c === '--None--')
            {
              $('#hourError' + id).text('Please populate all the input values !').css('color','red').css('font-size','14px').show();
              return 'drop';
            }
 
      var currentAssignment;
           if(!(projectId in global))
           {
              currentAssignment = assignmentIdToRecord[timecardRecord.pse__Assignment__c];
             
              timecardRecord.pse__Resource__c = currentAssignment.pse__Resource__c;
              if(currentAssignment.pse__Project__r.pse__Project_Manager__c != undefined)
              {
                timecardRecord.pse__Approver__c = currentAssignment.pse__Project__r.pse__Project_Manager__r.pse__Salesforce_User__c; 
 
              }           
              if(currentAssignment.pse__Project__r.pse__Is_Billable__c && milestoneBillable.Billable === 'true')
              {
                timecardRecord.pse__Billable__c = true;
                
                $('#bill'+id).show();
                $('#icon'+id).hide();
              }
              else
              {
                timecardRecord.pse__Billable__c = false;   
              
                $('#bill'+id).hide();
                $('#icon'+id).show();
              }
 
 
 
           }
           else
           {
                  currentAssignment = assignmentIdToRecord[timecardRecord.pse__Project__c];
                timecardRecord.pse__Billable__c = false;   
                timecardRecord.pse__Resource__c = contact.Id;
                $('#bill'+id).hide();
                $('#icon'+id).show();
 
           }
               
          var weekNotes = $('#WeeklyNotes' + id).val();
          var mHours = $('#MondayHours' + id).val();
          var mNotes = $('#MondayNotes' + id).val();
          var tHours = $('#TuesdayHours' + id).val();
          var tNotes = $('#TuesdayNotes' + id).val();
          var wHours = $('#WednesdayHours' + id).val();
          var wNotes = $('#WednesdayNotes' + id).val();
          var thHours = $('#ThursdayHours' + id).val();
          var thNotes = $('#ThursdayNotes' + id).val();
          var fHours = $('#FridayHours' + id).val();
          var fNotes = $('#FridayNotes' + id).val();
          var saHours = $('#SaturdayHours' + id).val();
          var saNotes = $('#SaturdayNotes' + id).val();
          var suHours = $('#SundayHours' + id).val();
          var suNotes = $('#SundayNotes' + id).val();
          
 
       
        
 
       
        mHours = Number(mHours);
          tHours = Number(tHours);
         wHours = Number(wHours);
          thHours = Number(thHours);
          fHours = Number(fHours);
          saHours = Number(saHours);
          suHours = Number(suHours);
 
    mHours = mHours > 24.0 ? 24 : mHours < -24.0? -24 : mHours;
    tHours = tHours > 24.0 ? 24 : tHours < -24.0? -24 : tHours;          
    wHours = wHours > 24.0 ? 24 : wHours < -24.0? -24 : wHours;
    thHours = thHours > 24.0 ? 24 : thHours < -24.0? -24 : thHours;
    fHours = fHours > 24.0 ? 24 : fHours < -24.0? -24 : fHours;
    saHours = saHours > 24.0 ? 24 : saHours < -24.0? -24 : saHours;
    suHours = suHours > 24.0 ? 24 : suHours < -24.0? -24 : suHours;
 
        if(!(projectId in global) && currentAssignment.pse__Project__r.pse__Daily_Timecard_Notes_Required__c || currentAssignment.pse__Daily_Timecard_Notes_Required__c)
          {
            if(mHours != 0 && mHours != undefined && mHours != '' && (mNotes === '' || mNotes === undefined) || (tHours != 0 && tHours != undefined && tHours != '' && (tNotes === '' || tNotes === undefined)) || (wHours != 0 && wHours != undefined && wHours != '' && (wNotes === '' || wNotes === undefined)) || (thHours != 0 && thHours != undefined && thHours != '' && (thNotes === '' || thNotes === undefined)) || (fHours != 0 && fHours != undefined && fHours != '' && (fNotes === '' || fNotes === undefined)) || (saHours != 0 && saHours != undefined && saHours != '' && (saNotes === '' || saNotes === undefined)) || (suHours != 0 && suHours != undefined && suHours != '' && (suNotes === '' || suNotes === undefined)))
            {
              $('#hourError' + id).text('Please fill in the daily notes !').css('color','red').css('font-size','14px').show();
              return 'drop';
            }
 
          }
 
          timecardRecord.pse__Timecard_Notes__c = weekNotes;
          timecardRecord.pse__Monday_Hours__c = mHours;
          timecardRecord.pse__Monday_Notes__c = mNotes;
          timecardRecord.pse__Tuesday_Hours__c = tHours;
          timecardRecord.pse__Tuesday_Notes__c = tNotes;
          timecardRecord.pse__Wednesday_Hours__c = wHours;
          timecardRecord.pse__Wednesday_Notes__c = wNotes;
          timecardRecord.pse__Thursday_Hours__c = thHours;
          timecardRecord.pse__Thursday_Notes__c = thNotes;
          timecardRecord.pse__Friday_Hours__c = fHours;
          timecardRecord.pse__Friday_Notes__c = fNotes;
          timecardRecord.pse__Saturday_Hours__c = saHours;
          timecardRecord.pse__Saturday_Notes__c = saNotes;
          timecardRecord.pse__Sunday_Hours__c = suHours;
          timecardRecord.pse__Sunday_Notes__c = suNotes;
          //timecardRecord.pse__Total_Hours__c = total;
 
         mHours = parseFloat(mHours).toFixed(2);                
          tHours = parseFloat(tHours).toFixed(2);
          wHours = parseFloat(wHours).toFixed(2);
          thHours = parseFloat(thHours).toFixed(2);
          fHours = parseFloat(fHours).toFixed(2);
          saHours = parseFloat(saHours).toFixed(2);
          suHours = parseFloat(suHours).toFixed(2);
 
          var total = parseFloat(mHours) + parseFloat(tHours) + parseFloat(wHours) + parseFloat(thHours) + parseFloat(fHours) + parseFloat(saHours) + parseFloat(suHours);       
          
 
          $('#listmHours' + id).html(mHours);
          if(mHours != 0)
          {
            $('#listmHours' + id).on('click',function () {
                hideShowToolBar(mNotes);
            });
 
          }
 
          $('#listtHours' + id).html(tHours);
          if(tHours != 0)
           {
              $('#listtHours' + id).on('click',function () {
              hideShowToolBar(tNotes);
              });
 
           }
 
          $('#listwHours' + id).html(wHours);
          if(wHours != 0)
           {
                $('#listwHours' + id).on('click',function () {
                    hideShowToolBar(wNotes);
                });
 
           }
 
          $('#listthHours' + id).html(thHours);
          if(thHours != 0)
           {
              $('#listthHours' + id).on('click',function () {
                  hideShowToolBar(thNotes);
              });
 
           }
 
          $('#listfHours' + id).html(fHours);
          if(fHours != 0)
 
          $('#listfHours' + id).on('click',function () {
              hideShowToolBar(fNotes);
          });
 
          $('#listsaHours' + id).html(saHours);
          if(saHours != 0)
          {
              $('#listsaHours' + id).on('click',function () {
                 hideShowToolBar(saNotes);
              });
          }
 
          $('#listsuHours' + id).html(suHours);
          if(suHours != 0)
          { 
            $('#listsuHours' + id).on('click',function () {
                hideShowToolBar(suNotes);
            });
          }
          $('#listMilestone' + id).html(milestones[timecardRecord.pse__Milestone__c].Name);
          $('#listMilestone' + id).on('click',function () {
              hideShowToolBar($('#listMilestone' + id).html());
          });
         
          $('#listProduct' + id).html(products[timecardRecord.pse__Project_Methodology_Object__c].Name);         
          $('#listProduct' + id).on('click',function () {
              hideShowToolBar($('#listProduct' + id).html());
          });
         
          $('#assignmentName' + id).text(currentAssignment.Name);
          $('#assignmentName' + id).on('click',function () {
              hideShowToolBar(currentAssignment.Name);
          });
 
          $('#totalHours' + id).text('' + total);
 
          summaryHours();
          return timecardRecord;
 
       }
 
 
       function createProjectFilter(fromEvent,refId)
       {
          var id;
           if(fromEvent != 'noevent')
          {
            id = $(refId).attr("id");
            id = id.substring(14, id.length);
 
          }
          else
          {
           
          id = refId.substring(15, refId.length);
         
          }
 
            var assignmentId = $(refId).val();
            $('#ProjectList' + id)
                    .find('option')
                        .remove()
                            ;           
            $('#MilestoneList' + id)
                    .find('option')
                        .remove()
                            ;           
            $('#ProductList' + id)
                    .find('option')
                        .remove()
                            ;           
 
            if(assignmentId != '--None--' &&  assignmentId != '')
            {
                var projectId = assignmentId;  
                if(!( assignmentId in global))
                {
 
                    $('#ProjectDiv' + id).show();         
                    $('<option>').val(assignmentIdToRecord[assignmentId].pse__Project__c).text(assignmentIdToRecord[assignmentId].pse__Project__r.Name).appendTo('#ProjectList'+ id);   
                    projectId = assignmentIdToRecord[assignmentId].pse__Project__c;
                }
                else
                {
                  $('#ProjectDiv' + id).hide();         
                }
 
              if(milestones != undefined && Object.keys(milestones).length > 0 && assignmentId != '--None--')
                {
                    $('<option>').val('--None--').text('--None--').appendTo('#MilestoneList' + id);           
                    for(var j in milestones)
                    {
                        if(milestones[j].Project == projectId)
                        {
                            $('<option>').val(j).text(milestones[j].Name).appendTo('#MilestoneList' + id);   
                        }
                       
                    }
                    if(!( projectId in global) && milestones[assignmentIdToRecord[assignmentId].pse__Milestone__c] != undefined )
                    {
                      $('#MilestoneList' + id).val(assignmentIdToRecord[assignmentId].pse__Milestone__c);
                    }                           
                }
 
 
                if(products != undefined && Object.keys(products).length > 0 && assignmentId != '--None--')
                {
                    $('<option>').val('--None--').text('--None--').appendTo('#ProductList' + id);           
                    for(var j in products)
                    {
                        if(products[j].Project == projectId)
                        {
                            $('<option>').val(j).text(products[j].Name).appendTo('#ProductList' + id);   
                        }
                     
                    }                           
                }
 
            }
                   
 
 
        }  
 
        function selectAll()
        {
 
            if(!$('#selectAll').prop('checked'))
            {
                $('#first input:checkbox').not($('#selectAll')).prop('checked', false); 
            }
            else
            {
              var index=0;
              var currentTimecard;
              $('#first input:checkbox').not($('#selectAll')).each(function(){
                var $this = $(this);
                var cardId = $this.attr("id");
                currentTimecard = timecardIdToRecord[cardId];
                var id = cardId.substring(8,cardId.length);
                var projectId = $('#AssignmentList' + id).val();
                if((projectId != '--None--' && projectId != '' && projectId != undefined) && (currentTimecard != undefined && (currentTimecard.pse__Status__c == 'Unsaved' || currentTimecard.pse__Status__c == 'Saved' || currentTimecard.pse__Status__c == 'Rejected' || currentTimecard.pse__Status__c === undefined)))
                {                   
                        $this.prop('checked', true);
                        index++;
                        if(index === limits)
                        {
                            return false;
                        }
                }                   
              });  
          }
      }
 
      function autoFocus(productId)
      {
          var id = $(productId).attr('id');
          var rowNum = id.substring(11,id.length);
          if($(productId).val() != '--None--')
          {
           
            $('#collapse' + rowNum).show();
            $('#right' + rowNum).show();
            $('#down' + rowNum).hide();
            $('#MondayHours' + rowNum).focus();
 
          }
          else
          {
            $('#collapse' + rowNum).hide();
            $('#right' + rowNum).hide();
            $('#down' + rowNum).show();
          }
 
      }
     
   </script> 
 
    <div  id="status" style="display: none;width: 100%;height: 100%" class="slds-scope slds-spinner_container" >
       <div role="status" class="slds-spinner slds-spinner--medium slds-spinner--brand"  >
          <span class="slds-assistive-text">Loading</span>
          <div class="slds-spinner__dot-a"></div>
          <div class="slds-spinner__dot-b"></div>
        </div>
 
    </div>
 
    <div id="messages" style="display:none;height: 100%;width: 100%; " class="modal fade">
      <div class="modal-dialog" >
        <div class="modal-content" >
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
          </div>
          <div class="modal-body" style="font-size: 1.5em">
            <p id="MessagePTag"> Success!!!</p>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal" style="font-size: 1.5em">Close</button>
          </div>
        </div><!-- /.modal-content -->
      </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
 
    <div  id="assignmentBlock" style="display: none;width: 100%;height: 100%" class="slds-scope" >
 
         <div  role="dialog" tabindex="-1" aria-labelledby="header43" class="slds-modal slds-fade-in-open slds-modal--large" style="width: 100%;height: 100%">
          <div class="slds-modal__container">
            <div class="slds-modal__header">
              <button class="slds-button slds-modal__close" style="color: white;" onclick="hideAssignment();">X</button> 
              <h2 id="header43" class="slds-text-heading--medium" style="font-size: 1.5em">Confirmation</h2>
            </div>
            <div class="slds-modal__content slds-p-around--medium">           
                <p  style="font-size: 1.5em!important"> There are unsaved timecards. Do you want to continue?</p>
                <label id="weekDir" style="display: none"></label>
            </div>
            <div class="slds-modal__footer">
              <button class="slds-button slds-button--neutral" onclick="hideAssignment();" style="font-size: 1.5em">Cancel</button>
              <button class="slds-button slds-button--brand" onclick="callWeekFunc();" style="font-size: 1.5em">Ok</button>
            </div>
          </div>
        </div>
        <div class="slds-backdrop slds-backdrop--open"></div>
    </div>
 
    <!--  The hours BLOCK-->
    <div  id="hoursBlock" style="display: none;width: 100%;height: 100%" class="slds-scope" >
 
         <div  role="dialog" tabindex="-1" aria-labelledby="header43" class="slds-modal slds-fade-in-open slds-modal--large" style="width: 100%;height: 100%">
          <div class="slds-modal__container">
            <div class="slds-modal__header">
              <button class="slds-button slds-modal__close" style="color: white;" onclick="hideHours();">X</button> 
              <h2 id="header43" class="slds-text-heading--medium" style="font-size: 2em">Copy Preference</h2>
              <input type="checkbox" id="AllPreference" class="fontSize2" onchange="selectDeselect(this);" style="float: left;"/>
            </div>
            <div class="slds-modal__content slds-p-around--medium">
           
          <fieldset class="slds-form--compound" id="AllPreferenceFieldSet">
             
                <div class="slds-form-element__group">
                  
                          
                    <div class="slds-form-element__row">
                        <div class="slds-form-element slds-size--1-of-1">
                            <input type="checkbox" id="MilestoneCopy" class="fontSize2"  />
                            <label class="slds-form-element__label fonttt" for="MilestoneCopy" >Milestone</label>                           
                          </div>
               
                      </div>
 
 
                    <div class="slds-form-element__row">
                        <div class="slds-form-element slds-size--1-of-1">
                            <input type="checkbox" id="ProductCopy" class="fontSize2"  />
                            <label class="slds-form-element__label fonttt" for="ProductCopy" >Project Product</label>
                           
                          </div>
               
                      </div>
 
                    <div class="slds-form-element__row">
                        <div class="slds-form-element slds-size--1-of-1">
                           
                            <input type="checkbox" id="HoursCopy" class="fontSize2"  />
                            <label class="slds-form-element__label fonttt" for="HoursCopy" >Hours</label>
                          </div>
               
                      </div>
 
                    <div class="slds-form-element__row">
                        <div class="slds-form-element slds-size--1-of-1">
                           
                            <input type="checkbox" id="NotesCopy" class="fontSize2"  />
                            <label class="slds-form-element__label fonttt" for="NotesCopy" >Notes</label>
                          </div>
               
                      </div>
                   
                  </div>
          </fieldset>
            
            </div>
           
            <div class="slds-modal__footer">
              <button class="slds-button slds-button--neutral" onclick="hideHours();" style="font-size: 1.5em">Cancel</button>
              <button class="slds-button slds-button--brand" onclick="copyPreference();" style="font-size: 1.5em">Ok</button>
            </div>
          </div>
        </div>
        <div class="slds-backdrop slds-backdrop--open"></div>
    </div>
 
 
    <div  id="commentsDialog" style="display: none;width: 100%;height: 100%" class="slds-scope" >
 
         <div  role="dialog" tabindex="-1" aria-labelledby="header43" class="slds-modal slds-fade-in-open slds-modal--large" style="width: 100%;height: 100%">
          <div class="slds-modal__container">
            <div class="slds-modal__header">
              <button class="slds-button slds-modal__close" style="color: white;" onclick="hideConfirm();">X</button> 
              <h2 id="header43" class="slds-text-heading--medium">Recall Comments</h2>
            </div>
            <div class="slds-modal__content slds-p-around--medium">
           
                <div class="slds-form-element">
                  <label class="slds-form-element__label" style="font-size: 1.5em" for="comments">Comments</label>
                  <div class="slds-form-element__control">
                    <div class="slds-select_container" style="font-size: 1.5em; ">
                      <input  id="comments" type="text" class="slds-select" />
                    </div>
                  </div>
                </div>       
     
            </div>
            <div class="slds-modal__footer">
              <button id="cancelOp" class="slds-button slds-button--neutral" onclick="hideConfirm();" style="font-size: 1.5em">Cancel</button>
             
 
              <button id="approveReject" class="slds-button slds-button--brand" onclick="performAction('Recall');" style="font-size: 1.5em">Recall</button>
            </div>
          </div>
        </div>
        <div class="slds-backdrop slds-backdrop--open"></div>
    </div>
 
    <div  id="rowAdd" style="position:relative;display: none;width: 100%;height: 100%" class="slds-scope" >
 
         <div  role="dialog" tabindex="-1" aria-labelledby="header43" class="slds-modal slds-fade-in-open slds-modal--large" style="width: 100%;height: 100%">
          <div class="slds-modal__container">
            <div class="slds-modal__header">
              <button class="slds-button slds-modal__close" style="color: white;" onclick="hideAddRows();">X</button> 
              <h2 id="header43" class="slds-text-heading--medium">Add Rows</h2>
            </div>
            <div class="slds-modal__content slds-p-around--medium">
           
                <div class="slds-form-element">
                  <label class="slds-form-element__label" style="font-size: 1.5em" for="numberAdd">Rows</label>
                  <div class="slds-form-element__control" style="font-size: 1.5em">
                      <input  id="numberAdd" type="number" min="1" max="50" class="slds-input" placeholder="5" />
                  </div>
                </div>       
     
            </div>
            <div class="slds-modal__footer">
              <button id="cancelOp" class="slds-button slds-button--neutral" onclick="hideAddRows();" style="font-size: 1.5em">Cancel</button>
             
 
              <button id="addRows" class="slds-button slds-button--brand" onclick="addRows();" style="font-size: 1.5em">Add</button>
            </div>
          </div>
        </div>
        <div class="slds-backdrop slds-backdrop--open"></div>
    </div>
 
    <div id="mainDiv">
        <nav id="topNav" class="navbar navbar-default navbar-fixed-top" style="height:30px">
            <div  class ="container-fluid" style="display:block;width: 100%;top: 0;position: fixed" >
                <div class="float_left" >
                    
                    <span id="left" class="slds-icon-utility-chevronleft fonttt leftStyle"   onclick="showAssignment('left');">
                      <svg aria-hidden="true" class="slds-icon slds-icon--large iconColor2" style="top: 5%; !important">
                        <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#chevronleft')}"></use>
                      </svg>
                    </span>
          
                    <span id="left" class="slds-icon-utility-chevronleft fonttt centerStyle" style="left: 45%!important">
              <input type="date" class="dateStyle" style="font-size: 1.2em" id="dateInput" onchange="printDate();"/>
                    </span>

                    <span id="right" class="slds-icon-utility-chevronright fonttt rightStyle" onclick="showAssignment('right');">
                      <svg aria-hidden="true" class="slds-icon slds-icon--large iconColor2" style="top: 5%; !important">
                        <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#chevronright')}"></use>
                      </svg>
                    </span>                    
                </div>
                <div  class="float_center" style="margin-top: 5px;">
                    
<!--                         <span id="badgeNum"  class="label label-default" style =" height: 100%;color:black;font-size: 2em">Time Entry
                        </span>
 -->                        <label style =" height: 100%;color:white;font-size: 2em">Week of</label>
                    
                </div>                                        
                
            </div>    
        </nav>
 
      <div id="first" style="position: absolute;top: 31px;width: 100%;overflow: scroll;bottom: 57px">
     
      <article class="slds-card slds-card--narrow summaryView" id="summary1">
          <div class="slds-card__body slds-card__body_inner" >     
            <div class="slds-card__body--inner slds-grid slds-wrap ">     
              <div class="slds-p-horizontal_small slds-size_1-of-1  slds-hint-parent" >      
 
                <div class="slds-grid slds-wrap slds-grid_pull-padded">
                     <div class="slds-col--padded slds-size--4-of-12 slds-truncate">
 
                     </div>
                   
                    
                     <div class="slds-col--padded slds-size--7-of-12 slds-truncate">
                        <label id="summaryLabel1" style="font-size: 1.5em !important;">Weekly Summary
                        </label>                       
                     </div>
                     <div class="slds-col--padded slds-size--1-of-12 slds-truncate">
                        <input type="checkbox" class="slds-float_right" id="selectAll" name="selectAll" onchange="selectAll();"/>
                     </div>
 
                 </div>
                    
                 <div id="summaryCard1">
                  <div class="slds-p-horizontal_small slds-size_1-of-1  slds-hint-parent">
                      <div class="slds-grid slds-wrap slds-grid_pull-padded">
                     
                        <div class="slds-col--padded slds-size_1-of-12" style="font-size: 1.5em !important;color: red; font-weight: bold;">SUN
                        </div>
                        <div class="slds-col--padded slds-size_1-of-12" style="font-size: 1.5em !important;color: blue; font-weight: bold;">MON
                        </div>
                        <div class="slds-col--padded slds-size_1-of-12" style="font-size: 1.5em !important;color: blue; font-weight: bold;">TUE
                        </div>
                        <div class="slds-col--padded slds-size_1-of-12" style="font-size: 1.5em !important;color: blue; font-weight: bold;">WED
                        </div>
                        <div class="slds-col--padded slds-size_1-of-12" style="font-size: 1.5em !important;color: blue; font-weight: bold;">THU
                        </div>
                        <div class="slds-col--padded slds-size_1-of-12" style="font-size: 1.5em !important;color: blue; font-weight: bold;">FRI
                        </div>
                        <div class="slds-col--padded slds-size_1-of-12" style="font-size: 1.5em !important;color: red; font-weight: bold;">SAT
                        </div>
                        <div class="slds-col--padded slds-size_1-of-12" style="font-size: 1.5em !important;color: blue; font-weight: bold;">SUM
                        </div>
                      </div> 
 
                  </div>
                  <div class="slds-p-horizontal_small slds-size_1-of-1  slds-hint-parent">
                     <div class="slds-grid slds-wrap slds-grid_pull-padded">  
 
                        <div id="summarysuHours1" class="slds-col--padded slds-size_1-of-12 summarysuHours viewsuHours" style="font-size: 1.5em !important" >0
                        </div>
                        <div id="summarymHours1"  class="slds-col--padded slds-size_1-of-12 summarymHours viewmHours" style="font-size: 1.5em !important" > 0
                        </div>
                        <div id="summarytHours1"  class="slds-col--padded slds-size_1-of-12 summarytHours viewtHours" style="font-size: 1.5em !important" > 0
                        </div>
                        <div id="summarywHours1"  class="slds-col--padded slds-size_1-of-12 summarywHours viewwHours" style="font-size: 1.5em !important" >0
                        </div>
                        <div id="summarythHours1" class="slds-col--padded slds-size_1-of-12 summarythHours viewthHours" style="font-size: 1.5em !important" >0
                        </div>
                        <div id="summaryfHours1"  class="slds-col--padded slds-size_1-of-12 summaryfHours viewfHours" style="font-size: 1.5em !important" >0
                        </div>
                        <div id="summarysaHours1" class="slds-col--padded slds-size_1-of-12 summarysaHours viewsaHours" style="font-size: 1.5em !important" > 0
                        </div>
                        <div id="summarysumHours1" class="slds-col--padded slds-size_1-of-12 summarysumHours viewsumHours" style="font-size: 1.5em !important" > 0
                        </div>
                      </div> 
                  </div>
               </div> 
 
                </div>
                </div>
              </div>
           </article>                
 
      <article class="slds-card slds-card--narrow summaryView" id="summary2" >
          <div class="slds-card__body slds-card__body_inner" >     
            <div class="slds-card__body--inner slds-grid slds-wrap ">     
              <div class="slds-p-horizontal_small slds-size_1-of-1  slds-hint-parent" >      
 
                <div class="slds-grid slds-wrap slds-grid_pull-padded">
                     <div class="slds-col--padded slds-size--4-of-12 slds-truncate">
 
                     </div>
                   
                    
                     <div class="slds-col--padded slds-size--8-of-12 slds-truncate">
                        <label id="summaryLabel1" style="font-size: 1.5em !important;">Weekly Summary
                        </label>
                     </div>
                 </div>
                    
                 <div id="summaryCard2">
                  <div class="slds-p-horizontal_small slds-size_1-of-1  slds-hint-parent">
                      <div class="slds-grid slds-wrap slds-grid_pull-padded">
                     
                        <div class="slds-col--padded slds-size_1-of-12 viewsuHours" style="font-size: 1.5em !important;color: red; font-weight: bold;">SUN
                        </div>
                        <div class="slds-col--padded slds-size_1-of-12 viewmHours" style="font-size: 1.5em !important;color: blue; font-weight: bold;">MON
                        </div>
                        <div class="slds-col--padded slds-size_1-of-12 viewtHours" style="font-size: 1.5em !important;color: blue; font-weight: bold;">TUE
                        </div>
                        <div class="slds-col--padded slds-size_1-of-12 viewwHours" style="font-size: 1.5em !important;color: blue; font-weight: bold;">WED
                        </div>
                        <div class="slds-col--padded slds-size_1-of-12 viewthHours" style="font-size: 1.5em !important;color: blue; font-weight: bold;">THU
                        </div>
                        <div class="slds-col--padded slds-size_1-of-12 viewfHours"  style="font-size: 1.5em !important;color: blue; font-weight: bold;">FRI
                        </div>
                        <div class="slds-col--padded slds-size_1-of-12 viewsaHours" style="font-size: 1.5em !important;color: red; font-weight: bold;">SAT
                        </div>
                        <div class="slds-col--padded slds-size_1-of-12 viewsumHours" style="font-size: 1.5em !important;color: blue; font-weight: bold;">SUM
                        </div>
                      </div> 
 
                  </div>
                  <div class="slds-p-horizontal_small slds-size_1-of-1  slds-hint-parent">
                     <div class="slds-grid slds-wrap slds-grid_pull-padded">  
 
                        <div id="summarysuHours2" class="slds-col--padded slds-size_1-of-12 summarysuHours" style="font-size: 1.5em !important" >0
                        </div>
                        <div id="summarymHours2"  class="slds-col--padded slds-size_1-of-12 summarymHours" style="font-size: 1.5em !important" > 0
                        </div>
                        <div id="summarytHours2"  class="slds-col--padded slds-size_1-of-12 summarytHours" style="font-size: 1.5em !important" > 0
                        </div>
                        <div id="summarywHours2"  class="slds-col--padded slds-size_1-of-12 summarywHours" style="font-size: 1.5em !important" >0
                        </div>
                        <div id="summarythHours2" class="slds-col--padded slds-size_1-of-12 summarythHours" style="font-size: 1.5em !important" >0
                        </div>
                        <div id="summaryfHours2"  class="slds-col--padded slds-size_1-of-12 summaryfHours" style="font-size: 1.5em !important" >0
                        </div>
                        <div id="summarysaHours2" class="slds-col--padded slds-size_1-of-12 summarysaHours" style="font-size: 1.5em !important" > 0
                        </div>
                        <div id="summarysumHours2" class="slds-col--padded slds-size_1-of-12 summarysumHours" style="font-size: 1.5em !important" > 0
                        </div>
                      </div> 
                  </div>
               </div> 
 
                </div>
                </div>
              </div>
           </article>                
      </div>
 
        <nav class="navbar navbar-default navbar-fixed-bottom">
              
                                                <!--18.6 Test-->
            <span class="slds-icon_container--circle slds-icon-action-clone"   title="description of icon when needed" style="position: absolute; top: 8%; cursor: pointer;left: 2%!important" onclick="showAddRows();">
              <svg class="slds-icon slds-icon--large" aria-hidden="true">
                <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/action-sprite/svg/symbols.svg#add_relationship')}"></use>
              </svg>
            </span>
           
            <span>
              <span class = "footerText" style="left: 3.3%;" >Add</span>
            </span>
            
            <span class="slds-icon_container--circle slds-icon-action-upload"   title="description of icon when needed" style="position: absolute; top: 8%; cursor: pointer; left: 16%!important"  onclick="performAction('Save');">
              <svg class="slds-icon slds-icon--large" aria-hidden="true">
                <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/action-sprite/svg/symbols.svg#upload')}"></use>
              </svg>
            </span>
           
            <span>
              <span class = "footerText" style="left: 17%;" >Save</span>
            </span>
 
            <span class="slds-icon_container--circle slds-icon-action-submit-for-approval"   title="description of icon when needed" style="position: absolute; top: 8%;cursor: pointer; left: 30% !important" onclick="performAction('Submit');">
              <svg class="slds-icon slds-icon--large" aria-hidden="true">
                <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/action-sprite/svg/symbols.svg#submit_for_approval')}"></use>
              </svg>
            </span>
           
            <span>
              <span class = "footerText" style="left: 30%; " >Submit</span>            
            </span>
 
 
            <span class="slds-icon_container--circle slds-icon-action-clone"   title="description of icon when needed" style="position: absolute; top: 8%; cursor: pointer;left: 44%!important" onclick="performAction('Clone');">
              <svg class="slds-icon slds-icon--large" aria-hidden="true">
                <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/action-sprite/svg/symbols.svg#share_file')}"></use>
              </svg>
            </span>
           
            <span>
              <span class = "footerText" style="left: 44.7%;" >Clone</span>
            </span>
 
 
            <span class="slds-icon_container--circle "   title="description of icon when needed" style="position: absolute; top: 8%; cursor: pointer;left: 59%!important;background-color: #B8860B !important" onclick="showHours();">
              <svg class="slds-icon slds-icon--large" aria-hidden="true">
                <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#copy')}"></use>
              </svg>
             
            </span>
            <span>
              <span class = "footerText" style="left: 60%;" >Copy</span>
            </span>
                 
 
            <span class="slds-icon_container--circle"   title="description of icon when needed" style="position: absolute; top: 8%;cursor: pointer; left: 73.5%; background-color: #006699 !important" onclick="showConfirm();">
              <svg class="slds-icon slds-icon--large" aria-hidden="true">
                <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#reply')}"></use>
              </svg>
             
            </span>
            <span>
              <span class = "footerText" style="left: 74.6%;" >Recall</span> 
            </span>
 
 
            <span class="slds-icon_container--circle slds-icon-action-delete"   title="description of icon when needed" style="position: absolute; top: 8%; cursor: pointer;left: 87%!important" onclick="performAction('Delete');">
              <svg class="slds-icon slds-icon--large" aria-hidden="true">
                <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/action-sprite/svg/symbols.svg#delete')}"></use>
              </svg>
             
            </span>
            <span>
              <span class = "footerText" style="left: 87.5%;">Delete</span>
            </span>
 
        </nav>   
    </div>   
 
  </html>
</apex:page>