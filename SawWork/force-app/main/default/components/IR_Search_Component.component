<apex:component id="mycomponent" controller="IR_Filter" >
 
 <script type="text/javascript" src="/resource/Jquery/js/jquery-1.7.1.min.js"></script>
 <script type="text/javascript" src="/resource/Jquery/js/jquery-ui-1.8.17.custom.min.js"/>
  <link rel="stylesheet" type="text/css" href="/resource/Jquery/css/flick/jquery-ui-1.8.17.custom.css"></link>
 
  <script type="text/javascript">
  window.load=load();
  function load(){
  {!init}
  }
  jQuickFilter$ = jQuery.noConflict();
  function clearALL(){    
    //y=document.getElementsByClassName("SearchInput");   
    
    y=jQuickFilter$(".SearchInput"); 
    for(i=0;i<y.length;i++){ if(y[i].id.search("Search") > 0){y[i].value="";y[i].checked=false;} };    
    }
   
    var AutoCompleteLists = {!fieldset.AutoCompleteLists};
     jQuickFilter$ = jQuery.noConflict();
  
function noenter(e){
               if(window.event){
                    key = window.event.keyCode;     //IE
               } else{
                    key = e.which;     //firefox
               }
               if(key == 13) {                
                   var ele=document.getElementById('{!$Component.myform.block.fbtn}');
                  ele.click(); 
                    return false;
               } else{
                    return true;
               }
          }    

 </script>
  
  <apex:attribute name="pageController" 
      type="IR_PageControllerBase" 
      assignTo="{!pageController}" 
      required="true" 
      description="The controller for the page." />
   
   <apex:attribute name="inputQuery" description="input query String" type="String" assignTo="{!inputQuery}"/>
   <apex:attribute name="reRenderid" description="All The ids to Rerender" type="String" assignTo="{!ReRenderIds}"/>
   <apex:attribute name="Title" description="PageBlock Title" type="String" assignto="{!Title}"/>
   <apex:attribute name="Limit" description="Limit" type="Integer" assignTo="{!LimitSOQL}"/>
   <apex:attribute name="Status" description="Status id" type="String" assignTo="{!Status}"/>
   <apex:attribute name="DefaultOrderBy" description="The Default order by field" type="String" assignTo="{!DefaultOrderBy}"/>
   <apex:attribute name="DefaultSortOrderDirection" description="The Default order by Direction" type="String" assignTo="{!DefaultSortOrderDirection}"/>
   <apex:attribute name="SearchFieldset" description="The IR_FilterObject which contains the Search field label name and API Names" type="IR_FilterObject" assignTo="{!fieldSet}"/>
     <apex:form id="myform" styleClass="SIinputSearchForm ServiceIncidents" >
      <apex:pageBlock id="block"  mode="edit" title="{!Title}">
     <table cellpadding="2" cellspacing="2" style="width:180px">
       <!-- new -->
      <tr>
      <td>
      <apex:commandButton action="{!ApplyFilter}" status="{!Status}" value="Find" reRender="{!ReRenderIds}" id="fbtn"/>
      <apex:commandButton action="{!clearFilter}" status="{!Status}" value="Clear" oncomplete="clearALL();"  reRender="{!ReRenderIds}" />
      </td>
      </tr>
      <!-- new -->     
      <apex:repeat var="field" value="{!listOfFields}" id="repeat" >      
       <tr>
        <td style="font-weight:bold;">
        <apex:outputLabel value="{!field.Label}" ></apex:outputLabel>
        <br/>
        <apex:inputtext id="Searchtext" value="{!field.TextboxValue}" rendered="{!if(field.Datatype='string'||field.Datatype='other',true,false)}" styleClass="SearchInput" style="width:139px;" onkeypress="return noenter(event);" />
        <apex:outputLabel value="From" rendered="{!if(field.Datatype='date',true,false)}" style="display: block; width: 40px; float:left"></apex:outputLabel>
       
        <apex:inputText onfocus="DatePicker.pickDate(false, this, false);" value="{!field.Dateboxa}" id="Searchdatea" styleClass="SearchInput" rendered="{!if(field.Datatype='date',true,false)}"  style="width:99px;" onkeypress="return noenter(event);"/>
        <apex:outputLabel value="To" rendered="{!if(field.Datatype='date',true,false)}" style="display: block; width: 40px; float:left"></apex:outputLabel>
        
        <apex:inputText onfocus="DatePicker.pickDate(false, this, false);" value="{!field.Dateboxb}" id="Searchdateb"  styleClass="SearchInput" rendered="{!if(field.Datatype='date',true,false)}"  style="width:99px;" onkeypress="return noenter(event);"/>
        <apex:inputCheckbox value="{!field.CheckboxValue}" rendered="{!if(field.Datatype='Boolean',true,false)}" styleClass="SearchInput" id="SearchCheckbox" onclick="ShowSDSI()"/>
        <apex:selectList multiselect="false" value="{!field.TextboxValue}" size="1" rendered="{!if(field.Datatype='PickList',true,false)}" styleClass="SearchInput" id="SearchPicklist" onkeypress="return noenter(event);" >
        <apex:selectOptions value="{!field.selectOptions}"></apex:selectOptions>
        
        </apex:selectList>
        <apex:inputText onfocus="DatePicker.pickDate(false, this, false);" value="{!field.Dateboxa}" id="SearchdatesingleDate" styleClass="SearchInput" rendered="{!if(field.Datatype='sdate',true,false)}"  style="width:139px;"/>      
      
      
      </td>
      </tr>
     
      </apex:repeat>
      </table>
      <table>    
      <tr>
      <td>
      <apex:commandButton action="{!ApplyFilter}" status="{!Status}" value="Find" reRender="{!ReRenderIds}" />
      <apex:commandButton action="{!clearFilter}" status="{!Status}" value="Clear" oncomplete="clearALL();"  reRender="{!ReRenderIds}" />
      </td>
      </tr>
      <tr>
      <td>
      <apex:outputLabel style="font-size:90%;width:120px;">Note: Please include wildcard character * when searching by keyword/partial string.
      <br/>  Example: *net*, *config*, *1
      </apex:outputLabel>
      </td>
      </tr>
      </table>
      </apex:pageBlock>   
    </apex:form>
    <script> 
      jQuickFilter$ (function() {
     
   
     for(count=0;count<AutoCompleteLists.length;count++)
     {
     
     var temp = document.getElementById("{!$Component.myform.block.repeat}"+":"+ count+":Searchtext");
     jQuickFilter$ (temp).autocomplete({
     source: AutoCompleteLists[count]
     });
     }
     
    });
    </script>
</apex:component>